{"version":3,"file":"bundle.js","sources":["../src/js/components/Dropdown.js","../src/js/components/RaceModal.js","../src/js/utils/helpers.js","../src/js/utils/constants.js","../src/js/components/ModList.js","../src/js/components/DownloadManager.js","../src/js/services/ModService.js","../src/js/services/StorageService.js","../src/js/main.js"],"sourcesContent":["/**\r\n * Dropdown component\r\n */\r\n\r\nclass Dropdown {\r\n  /**\r\n   * Create a new dropdown\r\n   * @param {string} id - Dropdown element ID\r\n   * @param {Function} onChange - Callback function when option is selected\r\n   */\r\n  constructor(id, onChange) {\r\n    this.id = id;\r\n    this.dropdownElement = document.getElementById(id);\r\n    this.selectedElement = this.dropdownElement.querySelector('.dropdown-selected');\r\n    this.optionsElement = this.dropdownElement.querySelector('.dropdown-options');\r\n    this.selectedTextElement = this.dropdownElement.querySelector('.dropdown-text');\r\n    this.selectedIconElement = this.dropdownElement.querySelector('.dropdown-icon');\r\n    this.onChange = onChange || (() => {});\r\n    \r\n    this.setupEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Set up event listeners\r\n   */\r\n  setupEventListeners() {\r\n    // Toggle dropdown when the selected element is clicked\r\n    this.selectedElement.addEventListener('click', (e) => {\r\n      e.stopPropagation();\r\n      this.toggle();\r\n    });\r\n    \r\n    // Add click event to each option\r\n    const options = this.optionsElement.querySelectorAll('.dropdown-option');\r\n    options.forEach(option => {\r\n      option.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n        this.selectOption(option);\r\n      });\r\n    });\r\n    \r\n    // Close dropdown when clicking outside\r\n    document.addEventListener('click', () => {\r\n      this.close();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Toggle dropdown open/closed\r\n   */\r\n  toggle() {\r\n    // Close all other dropdowns first\r\n    document.querySelectorAll('.dropdown-options').forEach(dropdown => {\r\n      if (dropdown !== this.optionsElement) {\r\n        dropdown.classList.remove('show');\r\n      }\r\n    });\r\n    \r\n    document.querySelectorAll('.dropdown-selected').forEach(selected => {\r\n      if (selected !== this.selectedElement) {\r\n        selected.classList.remove('active');\r\n      }\r\n    });\r\n    \r\n    // Toggle this dropdown\r\n    this.optionsElement.classList.toggle('show');\r\n    this.selectedElement.classList.toggle('active');\r\n  }\r\n  \r\n  /**\r\n   * Close dropdown\r\n   */\r\n  close() {\r\n    this.optionsElement.classList.remove('show');\r\n    this.selectedElement.classList.remove('active');\r\n  }\r\n  \r\n  /**\r\n   * Select an option\r\n   * @param {HTMLElement} option - Option element to select\r\n   */\r\n  selectOption(option) {\r\n    const value = option.dataset.value;\r\n    const text = option.querySelector('span').textContent;\r\n    let icon = option.querySelector('img')?.src;\r\n    \r\n    // If we're in the body type dropdown but there's no icon, use the default one\r\n    if (this.id === 'btDropdown' && !icon) {\r\n      const bodyTypeId = option.dataset.value;\r\n      // Use the icon from the constants if available\r\n      if (bodyTypeId === '') {\r\n        icon = 'images/body_types/body_type_all.png';\r\n      } else if (bodyTypeId === 'bt1') {\r\n        icon = 'images/body_types/body_type_female.png';\r\n      } else if (bodyTypeId === 'bt2') {\r\n        icon = 'images/body_types/body_type_male.png';\r\n      } else if (bodyTypeId === 'bt4') {\r\n        icon = 'images/body_types/body_type_male_strong.png';\r\n      }\r\n    }\r\n    \r\n    // Update selected display\r\n    this.selectedTextElement.textContent = text;\r\n    this.selectedIconElement.src = icon;\r\n    this.selectedIconElement.alt = text;\r\n    this.selectedElement.dataset.value = value;\r\n    \r\n    // Mark the selected option\r\n    this.optionsElement.querySelectorAll('.dropdown-option').forEach(opt => {\r\n      opt.classList.toggle('selected', opt.dataset.value === value);\r\n    });\r\n    \r\n    // Close the dropdown\r\n    this.close();\r\n    \r\n    // Call the change handler\r\n    this.onChange(value, text, icon);\r\n  }\r\n  \r\n  /**\r\n   * Programmatically select an option by value\r\n   * @param {string} value - Value of the option to select\r\n   */\r\n  setValue(value) {\r\n    const option = this.optionsElement.querySelector(`.dropdown-option[data-value=\"${value}\"]`);\r\n    if (option) {\r\n      this.selectOption(option);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get the current value\r\n   * @returns {string} Current value\r\n   */\r\n  getValue() {\r\n    return this.selectedElement.dataset.value;\r\n  }\r\n  \r\n  /**\r\n   * Update options dynamically\r\n   * @param {Array} options - Array of option objects with id, name, icon, and count properties\r\n   */\r\n  updateOptions(options) {\r\n    // Clear existing options\r\n    this.optionsElement.innerHTML = '';\r\n    \r\n    // Create new options\r\n    options.forEach(opt => {\r\n      const option = document.createElement('div');\r\n      option.className = 'dropdown-option';\r\n      option.dataset.value = opt.id;\r\n      \r\n      // Pour le dropdown des races, inclure l'ic√¥ne\r\n      if (this.id === 'raceDropdown') {\r\n        option.innerHTML = `\r\n          <img src=\"${opt.icon}\" alt=\"${opt.name}\" class=\"dropdown-icon\">\r\n          <span>${opt.name} (${opt.count !== undefined ? opt.count : 0})</span>\r\n        `;\r\n      } else {\r\n        // Pour les autres dropdowns (comme le dropdown de type de corps)\r\n        option.innerHTML = `\r\n          <span>${opt.name} (${opt.count !== undefined ? opt.count : 0})</span>\r\n        `;\r\n      }\r\n      \r\n      option.addEventListener('click', (e) => {\r\n        e.stopPropagation();\r\n        this.selectOption(option);\r\n      });\r\n      \r\n      this.optionsElement.appendChild(option);\r\n    });\r\n  }\r\n}\r\n\r\nexport default Dropdown;","/**\r\n * Race selection modal component\r\n */\r\n\r\nclass RaceModal {\r\n  /**\r\n   * Create a new race modal\r\n   * @param {Function} onSelect - Callback when race is selected\r\n   * @param {Function} onSkip - Callback when selection is skipped\r\n   */\r\n  constructor(onSelect, onSkip) {\r\n    this.modalElement = document.getElementById('raceModal');\r\n    this.gridElement = document.getElementById('raceGrid');\r\n    this.confirmButton = document.getElementById('confirmRaceBtn');\r\n    this.skipButton = document.getElementById('skipRaceBtn');\r\n    this.selectedRace = '';\r\n    this.onSelect = onSelect || (() => {});\r\n    this.onSkip = onSkip || (() => {});\r\n    \r\n    this.setupEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Set up event listeners\r\n   */\r\n  setupEventListeners() {\r\n    this.confirmButton.addEventListener('click', () => {\r\n      if (this.selectedRace) {\r\n        this.onSelect(this.selectedRace);\r\n        this.hide();\r\n      }\r\n    });\r\n    \r\n    this.skipButton.addEventListener('click', () => {\r\n      this.onSkip();\r\n      this.hide();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Populate the modal with race options\r\n   * @param {Array} races - Array of race objects with id, name, and icon properties\r\n   */\r\n  populateRaces(races) {\r\n    // Clear existing options\r\n    this.gridElement.innerHTML = '';\r\n    \r\n    // Add new options (excluding \"All Races\")\r\n    races.filter(race => race.id !== '').forEach(race => {\r\n      const option = document.createElement('div');\r\n      option.className = 'race-option';\r\n      option.dataset.race = race.id;\r\n      \r\n      option.innerHTML = `\r\n        <img src=\"${race.icon}\" alt=\"${race.name}\" onerror=\"this.onerror=null; this.src='data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2260%22%20height%3D%2260%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Ctext%20x%3D%2250%25%22%20y%3D%2250%25%22%20font-family%3D%22Arial%22%20font-size%3D%2220%22%20fill%3D%22%23ffffff%22%20text-anchor%3D%22middle%22%20dominant-baseline%3D%22middle%22%3E${race.name.charAt(0)}%3C%2Ftext%3E%3C%2Fsvg%3E';\">\r\n        <div class=\"race-name\">${race.name}</div>\r\n      `;\r\n      \r\n      option.addEventListener('click', () => {\r\n        // Deselect all others\r\n        document.querySelectorAll('.race-option').forEach(el => {\r\n          el.classList.remove('active');\r\n        });\r\n        \r\n        // Select this one\r\n        option.classList.add('active');\r\n        this.selectedRace = race.id;\r\n        \r\n        // Enable the confirm button\r\n        this.confirmButton.disabled = false;\r\n      });\r\n      \r\n      this.gridElement.appendChild(option);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Show the modal\r\n   */\r\n  show() {\r\n    this.modalElement.style.display = 'flex';\r\n    this.selectedRace = '';\r\n    this.confirmButton.disabled = true;\r\n    \r\n    // Deselect all options\r\n    document.querySelectorAll('.race-option').forEach(el => {\r\n      el.classList.remove('active');\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Hide the modal\r\n   */\r\n  hide() {\r\n    this.modalElement.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport default RaceModal;","/**\r\n * Helper functions for the application\r\n */\r\n\r\n/**\r\n * Get race display name from race ID\r\n * @param {string} race - Race ID\r\n * @returns {string} Race display name\r\n */\r\nexport function getRaceName(race) {\r\n  const raceMap = {\r\n    'dragonborn': 'Dragonborn',\r\n    'drow': 'Drow',\r\n    'dwarf': 'Dwarf',\r\n    'elf': 'Elf',\r\n    'githyanki': 'Githyanki',\r\n    'gnome': 'Gnome',\r\n    'half-elf': 'Half-Elf',\r\n    'halfling': 'Halfling',\r\n    'half-orc': 'Half-Orc',\r\n    'human': 'Human',\r\n    'tiefling': 'Tiefling'\r\n  };\r\n  return raceMap[race] || race;\r\n}\r\n\r\n/**\r\n * Get body type display name from body type ID\r\n * @param {string} bt - Body type ID\r\n * @returns {string} Body type display name\r\n */\r\nexport function getBodyTypeName(bt) {\r\n  const btMap = {\r\n    'bt1': 'Female',\r\n    'bt2': 'Male',\r\n    'bt4': 'Male - Strong'\r\n  };\r\n  return btMap[bt] || bt.toUpperCase();\r\n}\r\n\r\n/**\r\n * Get filename from URL\r\n * @param {string} url - URL to extract filename from\r\n * @returns {string} Filename\r\n */\r\nexport function getFileNameFromUrl(url) {\r\n  try {\r\n    const urlObj = new URL(url);\r\n    const nameParam = urlObj.searchParams.get('n');\r\n    if (nameParam) {\r\n      return decodeURIComponent(nameParam);\r\n    }\r\n    return decodeURIComponent(url.split(\"/\").pop().split(\"?\")[0]);\r\n  } catch (e) {\r\n    return url.split(\"/\").pop().split(\"?\")[0];\r\n  }\r\n}\r\n\r\n/**\r\n * Create a debounced function that delays invoking func until after wait milliseconds\r\n * @param {Function} func - Function to debounce\r\n * @param {number} delay - Delay in milliseconds\r\n * @returns {Function} Debounced function\r\n */\r\nexport function debounce(func, delay) {\r\n  let timeoutId;\r\n  return function(...args) {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    timeoutId = setTimeout(() => {\r\n      func.apply(this, args);\r\n      timeoutId = null;\r\n    }, delay);\r\n  };\r\n}\r\n\r\n/**\r\n * Show a status message\r\n * @param {string} type - Message type ('success' or 'error')\r\n * @param {string} message - Message text\r\n * @param {HTMLElement} statusElement - Status element\r\n */\r\nexport function showStatus(type, message, statusElement) {\r\n  statusElement.textContent = message;\r\n  statusElement.className = `status ${type}`;\r\n  statusElement.style.display = 'block';\r\n  \r\n  setTimeout(() => {\r\n    statusElement.style.display = 'none';\r\n  }, 5000);\r\n}","/**\r\n * Configuration values and constants\r\n */\r\n\r\n// Race icons configuration\r\nexport const RACE_ICONS = {\r\n  '': 'images/races/150px-Race_Human.png', // Default for \"All Races\"\r\n  'dragonborn': 'images/races/150px-Race_Dragonborn.png',\r\n  'drow': 'images/races/150px-Race_Drow.png',\r\n  'dwarf': 'images/races/150px-Race_Dwarf.png',\r\n  'elf': 'images/races/150px-Race_Elf.png',\r\n  'githyanki': 'images/races/150px-Race_Githyanki.png',\r\n  'gnome': 'images/races/150px-Race_Gnome.png',\r\n  'half-elf': 'images/races/150px-Race_Half-Elf.png',\r\n  'halfling': 'images/races/150px-Race_Halfling.png',\r\n  'half-orc': 'images/races/150px-Race_Half-Orc.png',\r\n  'human': 'images/races/150px-Race_Human.png',\r\n  'tiefling': 'images/races/150px-Race_Tiefling.png'\r\n};\r\n\r\n// Body type configuration\r\nexport const BODY_TYPES = {\r\n  '': {\r\n    name: 'All Types',\r\n    icon: 'images/body_types/body_type_all.png'\r\n  },\r\n  'bt1': {\r\n    name: 'BT1 - Female',\r\n    icon: 'images/body_types/body_type_female.png'\r\n  },\r\n  'bt2': {\r\n    name: 'BT2 - Male',\r\n    icon: 'images/body_types/body_type_male.png'\r\n  },\r\n  'bt4': {\r\n    name: 'BT4 - Male - Strong',\r\n    icon: 'images/body_types/body_type_male_strong.png'\r\n  }\r\n};\r\n\r\n// Race names mapping\r\nexport const RACE_NAMES = {\r\n  'dragonborn': 'Dragonborn',\r\n  'drow': 'Drow',\r\n  'dwarf': 'Dwarf',\r\n  'elf': 'Elf',\r\n  'githyanki': 'Githyanki',\r\n  'gnome': 'Gnome',\r\n  'half-elf': 'Half-Elf',\r\n  'halfling': 'Halfling',\r\n  'half-orc': 'Half-Orc',\r\n  'human': 'Human',\r\n  'tiefling': 'Tiefling',\r\n  '': 'All Races'\r\n};\r\n\r\n// Local Storage keys\r\nexport const STORAGE_KEYS = {\r\n  SELECTED_PRESETS: 'selectedHeadPresets',\r\n  APP_STATE: 'headPresetState',\r\n  VISITED_BEFORE: 'hasVisitedBefore'\r\n};","/**\r\n * ModList component to render and manage mod cards\r\n */\r\nimport { getRaceName, getBodyTypeName } from '../utils/helpers';\r\nimport { RACE_ICONS } from '../utils/constants';\r\n\r\nclass ModList {\r\n  /**\r\n   * Create a new mod list\r\n   * @param {Function} onSelectionChange - Callback when selection changes\r\n   */\r\n  constructor(onSelectionChange) {\r\n    this.modListElement = document.getElementById('modList');\r\n    this.onSelectionChange = onSelectionChange || (() => {});\r\n    this.currentSelections = {};\r\n  }\r\n  \r\n  /**\r\n   * Render mod cards\r\n   * @param {Array} mods - Array of mods to render\r\n   */\r\n  renderMods(mods) {\r\n    // Save current selections before clearing\r\n    this.saveCurrentSelections();\r\n    \r\n    // Clear the list\r\n    this.modListElement.innerHTML = '';\r\n    \r\n    // Show message if no mods found\r\n    if (mods.length === 0) {\r\n      this.modListElement.innerHTML = `\r\n        <p style=\"grid-column: 1/-1; text-align: center; padding: 2rem;\">\r\n          No presets found matching these criteria.\r\n        </p>`;\r\n      return;\r\n    }\r\n    \r\n    // Render each mod\r\n    mods.forEach(mod => {\r\n      const card = document.createElement('label');\r\n      card.className = 'mod-card';\r\n      card.dataset.id = mod.id;\r\n      \r\n      // Get race name and icon\r\n      const raceName = getRaceName(mod.race);\r\n      const raceIcon = RACE_ICONS[mod.race] || 'images/races/150px-Race_Human.png';\r\n      const bodyTypeName = getBodyTypeName(mod.bodyType);\r\n      \r\n      // Check if this mod was previously selected\r\n      const isChecked = this.currentSelections[mod.id] ? 'checked' : '';\r\n      \r\n      // Add original link if it exists\r\n      const originalLink = mod.originalLink \r\n        ? `<a href=\"${mod.originalLink}\" class=\"original-link\" target=\"_blank\" title=\"View original mod\" onclick=\"event.stopPropagation();\">\r\n            <i class=\"fas fa-external-link-alt\"></i>\r\n          </a>` \r\n        : '';\r\n      \r\n      card.innerHTML = `\r\n        <input type=\"checkbox\" value=\"${mod.downloadUrl}\" ${isChecked} />\r\n        <div class=\"image-container\">\r\n          <img src=\"${mod.imagePath}\" alt=\"${mod.displayName}\" />\r\n          ${originalLink}\r\n        </div>\r\n        <div class=\"content\">\r\n          <div class=\"title\">${mod.displayName}</div>\r\n          <div class=\"badges-container\">\r\n            <div class=\"badges\">\r\n              <div class=\"badge race-badge\" style=\"background-image: url(${raceIcon}); background-size: 12px; background-repeat: no-repeat; background-position: 5px center; padding-left: 22px;\">\r\n                ${raceName}\r\n              </div>\r\n              <div class=\"badge body-type-badge\">\r\n                ${mod.bodyType.toUpperCase()} - ${bodyTypeName}\r\n              </div>\r\n            </div>\r\n            <div class=\"badge-link-wrapper\">\r\n              <div class=\"badge link-badge\">\r\n                <a href=\"https://bg3.wiki\" target=\"_blank\" onclick=\"event.stopPropagation();\">\r\n                  <i class=\"fas fa-info-circle\"></i> Plus d'infos\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      \r\n      // Add event listener for checkbox changes\r\n      const checkbox = card.querySelector('input[type=checkbox]');\r\n      checkbox.addEventListener('change', () => {\r\n        this.saveCurrentSelections();\r\n        this.onSelectionChange(this.currentSelections);\r\n      });\r\n      \r\n      this.modListElement.appendChild(card);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Save current selections\r\n   */\r\n  saveCurrentSelections() {\r\n    this.currentSelections = {};\r\n    this.modListElement.querySelectorAll('.mod-card input[type=checkbox]:checked').forEach(checkbox => {\r\n      const modId = checkbox.closest('.mod-card').dataset.id;\r\n      this.currentSelections[modId] = true;\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Apply stored selections\r\n   * @param {Object} selections - Object with mod IDs as keys\r\n   */\r\n  applySelections(selections) {\r\n    if (!selections) return;\r\n    \r\n    this.modListElement.querySelectorAll('.mod-card').forEach(card => {\r\n      const modId = card.dataset.id;\r\n      if (selections[modId]) {\r\n        const checkbox = card.querySelector('input[type=checkbox]');\r\n        if (checkbox) {\r\n          checkbox.checked = true;\r\n        }\r\n      }\r\n    });\r\n    \r\n    this.saveCurrentSelections();\r\n    this.onSelectionChange(this.currentSelections);\r\n  }\r\n  \r\n  /**\r\n   * Select or deselect all mods\r\n   * @param {boolean} state - Whether to select (true) or deselect (false)\r\n   */\r\n  selectAll(state) {\r\n    this.modListElement.querySelectorAll(\".mod-card input[type=checkbox]\").forEach(checkbox => {\r\n      checkbox.checked = state;\r\n    });\r\n    \r\n    this.saveCurrentSelections();\r\n    this.onSelectionChange(this.currentSelections);\r\n  }\r\n  \r\n  /**\r\n   * Get selected mod URLs\r\n   * @returns {Array} Array of selected mod URLs\r\n   */\r\n  getSelectedUrls() {\r\n    return [...this.modListElement.querySelectorAll('input[type=checkbox]:checked')].map(el => el.value);\r\n  }\r\n  \r\n  /**\r\n   * Get selected mod count\r\n   * @returns {number} Number of selected mods\r\n   */\r\n  getSelectedCount() {\r\n    return Object.keys(this.currentSelections).length;\r\n  }\r\n}\r\n\r\nexport default ModList;","/**\r\n * DownloadManager component for generating ZIP packages\r\n */\r\nimport { getFileNameFromUrl, showStatus } from '../utils/helpers';\r\n\r\nclass DownloadManager {\r\n  constructor() {\r\n    this.downloadProgressElement = document.getElementById('downloadProgress');\r\n    this.progressBarElement = document.getElementById('progressBar');\r\n    this.downloadedCountElement = document.getElementById('downloadedCount');\r\n    this.totalCountElement = document.getElementById('totalCount');\r\n    this.progressStatusElement = document.getElementById('progressStatus');\r\n    this.statusMessageElement = document.getElementById('statusMessage');\r\n    this.generateBtnElement = document.getElementById('generateBtn');\r\n    this.isGenerating = false;\r\n  }\r\n  \r\n  /**\r\n   * Generate a mod pack from selected URLs\r\n   * @param {Array} selectedUrls - Array of URLs to download and package\r\n   * @returns {Promise<void>} Promise that resolves when pack is generated\r\n   */\r\n  async generatePack(selectedUrls) {\r\n    // Prevent multiple generation attempts\r\n    if (this.isGenerating) return;\r\n    this.isGenerating = true;\r\n    \r\n    if (selectedUrls.length === 0) {\r\n      showStatus('error', 'Please select at least one preset to generate your pack.', this.statusMessageElement);\r\n      this.isGenerating = false;\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // Initialize progress UI\r\n      this.downloadedCountElement.textContent = '0';\r\n      this.totalCountElement.textContent = selectedUrls.length;\r\n      this.progressBarElement.style.width = '0%';\r\n      this.progressStatusElement.textContent = 'Initializing download...';\r\n      this.downloadProgressElement.style.display = 'block';\r\n      this.generateBtnElement.disabled = true;\r\n      \r\n      const zip = new JSZip();\r\n      const folder = zip.folder(\"Collection_Heads_Based\");\r\n      let failedFiles = [];\r\n      let downloadedCount = 0;\r\n      \r\n      for (const file of selectedUrls) {\r\n        try {\r\n          // Update status\r\n          this.progressStatusElement.textContent = `Downloading ${getFileNameFromUrl(file)}...`;\r\n          \r\n          const response = await fetch(file);\r\n          if (!response.ok) throw new Error('Failed to fetch');\r\n          \r\n          const blob = await response.blob();\r\n          // Extract the name parameter from the URL if it exists\r\n          let fileName;\r\n          const url = new URL(file);\r\n          const nameParam = url.searchParams.get('n');\r\n          if (nameParam) {\r\n            fileName = decodeURIComponent(nameParam);\r\n          } else {\r\n            fileName = decodeURIComponent(file.split(\"/\").pop().split(\"?\")[0]);\r\n          }\r\n          folder.file(fileName, blob);\r\n          \r\n          // Update counter and progress bar\r\n          downloadedCount++;\r\n          this.downloadedCountElement.textContent = downloadedCount;\r\n          const progressPercentage = (downloadedCount / selectedUrls.length) * 100;\r\n          this.progressBarElement.style.width = `${progressPercentage}%`;\r\n        } catch (error) {\r\n          console.error(\"Error fetching\", file, error);\r\n          failedFiles.push(file);\r\n          \r\n          // Update status for failure\r\n          this.progressStatusElement.textContent = `Failed to download ${getFileNameFromUrl(file)}`;\r\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Brief pause to show error\r\n        }\r\n      }\r\n      \r\n      // Finalize zip\r\n      this.progressStatusElement.textContent = 'Finalizing your pack...';\r\n      \r\n      const content = await zip.generateAsync({ \r\n        type: \"blob\",\r\n        compression: \"DEFLATE\",\r\n        compressionOptions: { level: 5 },\r\n        // Add progress callback for ZIP generation\r\n        onUpdate: metadata => {\r\n          const compressionPercent = Math.round(metadata.percent);\r\n          this.progressBarElement.style.width = `${compressionPercent}%`;\r\n        }\r\n      });\r\n      \r\n      this.progressStatusElement.textContent = 'Download ready!';\r\n      saveAs(content, \"Collection_Heads_Based.zip\");\r\n      \r\n      if (failedFiles.length > 0) {\r\n        showStatus('error', `${failedFiles.length} file(s) could not be downloaded.`, this.statusMessageElement);\r\n      } else {\r\n        showStatus('success', 'Your pack has been generated successfully!', this.statusMessageElement);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error generating pack:\", error);\r\n      showStatus('error', 'An error occurred while generating the pack.', this.statusMessageElement);\r\n    } finally {\r\n      // Hide progress UI after a short delay\r\n      setTimeout(() => {\r\n        this.downloadProgressElement.style.display = 'none';\r\n        this.generateBtnElement.disabled = false;\r\n        this.isGenerating = false;\r\n      }, 2000);\r\n    }\r\n  }\r\n}\r\n\r\nexport default DownloadManager;","/**\r\n * Service to handle mod loading and filtering\r\n */\r\nimport { getRaceName, getBodyTypeName } from '../utils/helpers';\r\n\r\n// Fallback mods data for file:// protocol usage\r\nconst FALLBACK_MODS = [\r\n  {\r\n    \"id\": \"daenerys\",\r\n    \"name\": \"daenerys\",\r\n    \"displayName\": \"Daenerys Head Preset - JUSTFORTEST\",\r\n    \"race\": \"human\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/head-a.jpg\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/zmEqUzvCM0ih.zip?n=Daenerys%20Head%20Preset%202.0.0.zip\"\r\n  },\r\n  {\r\n    \"id\": \"aurora\",\r\n    \"name\": \"aurora_elf\",\r\n    \"displayName\": \"Aurora Head Preset - ELF\",\r\n    \"race\": \"elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Aurora-ELF.webp\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/ae6HiGBnKRI3.pak?n=Elf_F%20-%20Violet's%20Preset%201%20Aurora%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"aurora\",\r\n    \"name\": \"aurora_half-elf\",\r\n    \"displayName\": \"Aurora Head Preset - HALF-ELF\",\r\n    \"race\": \"half-elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Aurora-HELF.webp\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/OltCbM5oJgZa.pak?n=Helf_F%20-%20Violet's%20Preset%201%20Aurora%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-human\",\r\n    \"displayName\": \"Akira - Head Preset - HUMAN\",\r\n    \"race\": \"human\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/cDZ6IFLjonhd.pak?n=Human_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-tiefling\",\r\n    \"displayName\": \"Akira - Head Preset - TIEFLING\",\r\n    \"race\": \"tiefling\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/yU47qaW2y4nR.pak?n=Tiefling_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  }, \r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-drow\",\r\n    \"displayName\": \"Akira - Head Preset - DROW\",\r\n    \"race\": \"drow\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/jTSJty89eKG8.pak?n=Drow_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-elf\",\r\n    \"displayName\": \"Akira - Head Preset - ELF\",\r\n    \"race\": \"elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/j8SoFD5kJmAs.pak?n=Elf_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-half-elf\",\r\n    \"displayName\": \"Akira - Head Preset - HELF\",\r\n    \"race\": \"half-elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/aMU9lzKwqGYE.pak?n=Helf_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  }\r\n];\r\n\r\nclass ModService {\r\n  constructor() {\r\n    this.mods = [];\r\n    this.filteredMods = [];\r\n    this.availableRaces = [];\r\n  }\r\n  \r\n  /**\r\n   * Load mods from the JSON file or fallback to embedded data\r\n   * @returns {Promise<Array>} Array of mods\r\n   */\r\n  async loadMods() {\r\n    try {\r\n      // Try to fetch mods.json first\r\n      try {\r\n        const response = await fetch('mods.json');\r\n        if (!response.ok) throw new Error('Failed to load mods data');\r\n        \r\n        this.mods = await response.json();\r\n      } catch (fetchError) {\r\n        // If fetch fails (likely due to file:// protocol), use the fallback data\r\n        console.log(\"Using embedded mods data instead of fetch due to:\", fetchError.message);\r\n        this.mods = FALLBACK_MODS;\r\n      }\r\n      \r\n      this.filteredMods = [...this.mods];\r\n      \r\n      // Identify available races\r\n      this.identifyAvailableRaces();\r\n      \r\n      return this.mods;\r\n    } catch (error) {\r\n      console.error(\"Error loading mods:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Identify available races from loaded mods\r\n   */\r\n  identifyAvailableRaces() {\r\n    // Add \"All Races\" option by default\r\n    this.availableRaces = [{ \r\n      id: '', \r\n      name: 'All Races', \r\n      icon: 'images/races/150px-Race_Human.png',\r\n      count: this.mods.length\r\n    }];\r\n    \r\n    // Count occurrences of each race\r\n    const raceCounts = {};\r\n    this.mods.forEach(mod => {\r\n      if (mod.race) {\r\n        raceCounts[mod.race] = (raceCounts[mod.race] || 0) + 1;\r\n      }\r\n    });\r\n    \r\n    // Create entries for races that have presets\r\n    for (const raceId in raceCounts) {\r\n      if (raceCounts[raceId] > 0) {\r\n        this.availableRaces.push({\r\n          id: raceId,\r\n          name: getRaceName(raceId),\r\n          icon: `images/races/150px-Race_${this.capitalizeRaceName(raceId)}.png`,\r\n          count: raceCounts[raceId]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Sort races alphabetically (after \"All Races\")\r\n    this.availableRaces.sort((a, b) => {\r\n      if (a.id === '') return -1;\r\n      if (b.id === '') return 1;\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    \r\n    return this.availableRaces;\r\n  }\r\n  \r\n  /**\r\n   * Capitalize each part of a race name that contains hyphens\r\n   * @param {string} raceId - Race identifier (e.g., 'half-elf')\r\n   * @returns {string} Capitalized race name (e.g., 'Half-Elf')\r\n   */\r\n  capitalizeRaceName(raceId) {\r\n    return raceId.split('-')\r\n      .map(part => part.charAt(0).toUpperCase() + part.slice(1))\r\n      .join('-');\r\n  }\r\n  \r\n  /**\r\n   * Filter mods based on search query and selected filters\r\n   * @param {string} query - Search query\r\n   * @param {string} race - Selected race filter\r\n   * @param {string} bodyType - Selected body type filter\r\n   * @returns {Array} Filtered mods\r\n   */\r\n  filterMods(query, race, bodyType) {\r\n    const normalizedQuery = query.toLowerCase();\r\n    \r\n    this.filteredMods = this.mods.filter(mod => {\r\n      const matchName = mod.name.toLowerCase().includes(normalizedQuery);\r\n      const matchRace = race === \"\" || mod.race === race;\r\n      const matchBT = bodyType === \"\" || mod.bodyType === bodyType;\r\n      \r\n      return matchName && matchRace && matchBT;\r\n    });\r\n    \r\n    return this.filteredMods;\r\n  }\r\n  \r\n  /**\r\n   * Get counts for each filter option\r\n   * @returns {Object} Object containing race and body type counts\r\n   */\r\n  getFilterCounts() {\r\n    // Count races\r\n    const raceCounts = {};\r\n    this.mods.forEach(mod => {\r\n      raceCounts[mod.race] = (raceCounts[mod.race] || 0) + 1;\r\n    });\r\n    \r\n    // Count body types\r\n    const btCounts = {};\r\n    this.mods.forEach(mod => {\r\n      btCounts[mod.bodyType] = (btCounts[mod.bodyType] || 0) + 1;\r\n    });\r\n    \r\n    return { raceCounts, btCounts };\r\n  }\r\n  \r\n  /**\r\n   * Get available races\r\n   * @returns {Array} Available races with counts\r\n   */\r\n  getAvailableRaces() {\r\n    return this.availableRaces;\r\n  }\r\n  \r\n  /**\r\n   * Get all mods\r\n   * @returns {Array} All mods\r\n   */\r\n  getAllMods() {\r\n    return this.mods;\r\n  }\r\n  \r\n  /**\r\n   * Get filtered mods\r\n   * @returns {Array} Filtered mods\r\n   */\r\n  getFilteredMods() {\r\n    return this.filteredMods;\r\n  }\r\n}\r\n\r\nexport default new ModService();","/**\r\n * Service to handle localStorage operations\r\n */\r\nimport { STORAGE_KEYS } from '../utils/constants';\r\n\r\nclass StorageService {\r\n  /**\r\n   * Save application state to localStorage\r\n   * @param {string} searchQuery - Current search query\r\n   * @param {string} raceFilter - Selected race filter\r\n   * @param {string} btFilter - Selected body type filter\r\n   */\r\n  saveStateToStorage(searchQuery, raceFilter, btFilter) {\r\n    const state = {\r\n      searchQuery: searchQuery,\r\n      raceFilter: raceFilter,\r\n      btFilter: btFilter\r\n    };\r\n    localStorage.setItem(STORAGE_KEYS.APP_STATE, JSON.stringify(state));\r\n  }\r\n  \r\n  /**\r\n   * Save selected mods to localStorage\r\n   * @param {Object} selectedModIds - Object with mod IDs as keys\r\n   */\r\n  saveSelectedModsToStorage(selectedModIds) {\r\n    localStorage.setItem(STORAGE_KEYS.SELECTED_PRESETS, JSON.stringify(selectedModIds));\r\n  }\r\n  \r\n  /**\r\n   * Load application state from localStorage\r\n   * @returns {Object|null} Saved state or null if not found\r\n   */\r\n  loadStateFromStorage() {\r\n    const savedState = localStorage.getItem(STORAGE_KEYS.APP_STATE);\r\n    return savedState ? JSON.parse(savedState) : null;\r\n  }\r\n  \r\n  /**\r\n   * Load selected mods from localStorage\r\n   * @returns {Object|null} Selected mod IDs or null if not found\r\n   */\r\n  loadSelectedModsFromStorage() {\r\n    const savedSelectedMods = localStorage.getItem(STORAGE_KEYS.SELECTED_PRESETS);\r\n    return savedSelectedMods ? JSON.parse(savedSelectedMods) : null;\r\n  }\r\n  \r\n  /**\r\n   * Check if the user has visited the site before\r\n   * @returns {boolean} Whether the user has visited before\r\n   */\r\n  hasVisitedBefore() {\r\n    return !!localStorage.getItem(STORAGE_KEYS.VISITED_BEFORE);\r\n  }\r\n  \r\n  /**\r\n   * Mark that the user has visited the site\r\n   */\r\n  setVisitedBefore() {\r\n    localStorage.setItem(STORAGE_KEYS.VISITED_BEFORE, 'true');\r\n  }\r\n  \r\n  /**\r\n   * Clear all storage\r\n   */\r\n  clearStorage() {\r\n    localStorage.removeItem(STORAGE_KEYS.APP_STATE);\r\n    localStorage.removeItem(STORAGE_KEYS.SELECTED_PRESETS);\r\n  }\r\n}\r\n\r\nexport default new StorageService();","/**\r\n * Main application entry point\r\n */\r\nimport '../css/styles.css';\r\nimport Dropdown from './components/Dropdown';\r\nimport RaceModal from './components/RaceModal';\r\nimport ModList from './components/ModList';\r\nimport DownloadManager from './components/DownloadManager';\r\nimport ModService from './services/ModService';\r\nimport StorageService from './services/StorageService';\r\nimport { debounce, showStatus } from './utils/helpers';\r\nimport { BODY_TYPES } from './utils/constants';\r\n\r\nclass App {\r\n  constructor() {\r\n    // DOM Elements\r\n    this.searchInput = document.getElementById('searchInput');\r\n    this.modCount = document.getElementById('modCount');\r\n    this.selectionCounter = document.getElementById('selectionCounter');\r\n    this.selectedCountElement = document.getElementById('selectedCount');\r\n    this.statusMessage = document.getElementById('statusMessage');\r\n    this.generateBtn = document.getElementById('generateBtn');\r\n    \r\n    // Components\r\n    this.modList = new ModList(this.handleSelectionChange.bind(this));\r\n    this.raceDropdown = new Dropdown('raceDropdown', this.handleRaceChange.bind(this));\r\n    this.btDropdown = new Dropdown('btDropdown', this.handleBodyTypeChange.bind(this));\r\n    this.raceModal = new RaceModal(this.handleRaceSelect.bind(this), this.handleRaceSkip.bind(this));\r\n    this.downloadManager = new DownloadManager();\r\n    \r\n    // State\r\n    this.currentFilters = {\r\n      search: '',\r\n      race: '',\r\n      bodyType: ''\r\n    };\r\n    \r\n    this.setupEventListeners();\r\n    this.initializeApp();\r\n  }\r\n  \r\n  /**\r\n   * Initialize the application\r\n   */\r\n  async initializeApp() {\r\n    try {\r\n      // Load mods\r\n      await ModService.loadMods();\r\n      \r\n      // Render initial mod list\r\n      this.modList.renderMods(ModService.getFilteredMods());\r\n      \r\n      // Update filter dropdowns\r\n      this.setupRaceModal();\r\n      this.updateFilterDropdowns();\r\n      this.updateModCount();\r\n      \r\n      // Load saved state and selections\r\n      this.loadStateFromStorage();\r\n      \r\n      // Show success message\r\n      showStatus('success', `${ModService.getAllMods().length} head presets loaded successfully!`, this.statusMessage);\r\n      \r\n      // Check if we need to show race modal (first visit)\r\n      if (!StorageService.hasVisitedBefore()) {\r\n        this.raceModal.show();\r\n        StorageService.setVisitedBefore();\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error initializing app:\", error);\r\n      showStatus('error', 'Error loading presets. Please refresh the page.', this.statusMessage);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Set up event listeners\r\n   */\r\n  setupEventListeners() {\r\n    // Search input\r\n    this.searchInput.addEventListener('input', () => {\r\n      this.currentFilters.search = this.searchInput.value;\r\n      this.filterMods();\r\n      this.saveStateToStorage();\r\n    });\r\n    \r\n    // Generate button\r\n    this.generateBtn.addEventListener('click', debounce(() => {\r\n      const selectedUrls = this.modList.getSelectedUrls();\r\n      this.downloadManager.generatePack(selectedUrls);\r\n    }, 1000));\r\n    \r\n    // Select/Deselect All buttons\r\n    document.querySelector('button[onclick=\"selectAll(true)\"]').addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      this.modList.selectAll(true);\r\n    });\r\n    \r\n    document.querySelector('button[onclick=\"selectAll(false)\"]').addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      this.modList.selectAll(false);\r\n    });\r\n    \r\n    // Clear Storage button\r\n    document.querySelector('button[onclick=\"clearStorage()\"]').addEventListener('click', (e) => {\r\n      e.preventDefault();\r\n      this.clearStorage();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Handle selection change in mod list\r\n   * @param {Object} selectedMods - Object with selected mod IDs\r\n   */\r\n  handleSelectionChange(selectedMods) {\r\n    // Update selection counter\r\n    const selectedCount = Object.keys(selectedMods).length;\r\n    this.selectedCountElement.textContent = selectedCount;\r\n    \r\n    // Show/hide counter based on selection\r\n    if (selectedCount > 0) {\r\n      this.selectionCounter.classList.add('show');\r\n    } else {\r\n      this.selectionCounter.classList.remove('show');\r\n    }\r\n    \r\n    // Update mod count display\r\n    this.updateModCount();\r\n    \r\n    // Save selections to storage\r\n    StorageService.saveSelectedModsToStorage(selectedMods);\r\n  }\r\n  \r\n  /**\r\n   * Handle race change in dropdown\r\n   * @param {string} race - Selected race\r\n   */\r\n  handleRaceChange(race) {\r\n    this.currentFilters.race = race;\r\n    this.filterMods();\r\n    this.saveStateToStorage();\r\n  }\r\n  \r\n  /**\r\n   * Handle body type change in dropdown\r\n   * @param {string} bodyType - Selected body type\r\n   */\r\n  handleBodyTypeChange(bodyType) {\r\n    this.currentFilters.bodyType = bodyType;\r\n    this.filterMods();\r\n    this.saveStateToStorage();\r\n  }\r\n  \r\n  /**\r\n   * Handle race selection from modal\r\n   * @param {string} race - Selected race\r\n   */\r\n  handleRaceSelect(race) {\r\n    if (race) {\r\n      const raceData = ModService.getAvailableRaces().find(r => r.id === race);\r\n      this.raceDropdown.setValue(race);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Handle race selection skip\r\n   */\r\n  handleRaceSkip() {\r\n    // Do nothing, just close the modal\r\n  }\r\n  \r\n  /**\r\n   * Filter mods based on current filters\r\n   */\r\n  filterMods() {\r\n    const filteredMods = ModService.filterMods(\r\n      this.currentFilters.search,\r\n      this.currentFilters.race,\r\n      this.currentFilters.bodyType\r\n    );\r\n    \r\n    this.modList.renderMods(filteredMods);\r\n    this.updateModCount();\r\n    \r\n    // Restore selections after filtering\r\n    const savedSelections = StorageService.loadSelectedModsFromStorage();\r\n    if (savedSelections) {\r\n      this.modList.applySelections(savedSelections);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Update mod count display\r\n   */\r\n  updateModCount() {\r\n    const totalMods = ModService.getAllMods().length;\r\n    const filteredMods = ModService.getFilteredMods().length;\r\n    const selectedMods = this.modList.getSelectedCount();\r\n    \r\n    this.modCount.textContent = `Showing ${filteredMods} of ${totalMods} presets (${selectedMods} selected)`;\r\n  }\r\n  \r\n  /**\r\n   * Set up race modal\r\n   */\r\n  setupRaceModal() {\r\n    const races = ModService.getAvailableRaces();\r\n    this.raceModal.populateRaces(races);\r\n  }\r\n  \r\n  /**\r\n   * Update filter dropdowns with available options\r\n   */\r\n  updateFilterDropdowns() {\r\n    // Update race dropdown\r\n    const races = ModService.getAvailableRaces();\r\n    this.raceDropdown.updateOptions(races);\r\n    \r\n    // Update body type dropdown\r\n    const { btCounts } = ModService.getFilterCounts();\r\n    const bodyTypeOptions = Object.keys(BODY_TYPES).map(id => {\r\n      return {\r\n        id: id,\r\n        name: BODY_TYPES[id].name,\r\n        icon: BODY_TYPES[id].icon,\r\n        count: id === '' ? ModService.getAllMods().length : (btCounts[id] || 0)\r\n      };\r\n    });\r\n    \r\n    this.btDropdown.updateOptions(bodyTypeOptions);\r\n  }\r\n  \r\n  /**\r\n   * Save state to storage\r\n   */\r\n  saveStateToStorage() {\r\n    StorageService.saveStateToStorage(\r\n      this.currentFilters.search,\r\n      this.currentFilters.race,\r\n      this.currentFilters.bodyType\r\n    );\r\n  }\r\n  \r\n  /**\r\n   * Load state from storage\r\n   */\r\n  loadStateFromStorage() {\r\n    // Load filter state\r\n    const savedState = StorageService.loadStateFromStorage();\r\n    if (savedState) {\r\n      // Set search input\r\n      if (savedState.searchQuery) {\r\n        this.searchInput.value = savedState.searchQuery;\r\n        this.currentFilters.search = savedState.searchQuery;\r\n      }\r\n      \r\n      // Set race filter\r\n      if (savedState.raceFilter) {\r\n        this.raceDropdown.setValue(savedState.raceFilter);\r\n        this.currentFilters.race = savedState.raceFilter;\r\n      }\r\n      \r\n      // Set body type filter\r\n      if (savedState.btFilter) {\r\n        this.btDropdown.setValue(savedState.btFilter);\r\n        this.currentFilters.bodyType = savedState.btFilter;\r\n      }\r\n      \r\n      // Apply filters if any exist\r\n      if (savedState.searchQuery || savedState.raceFilter || savedState.btFilter) {\r\n        this.filterMods();\r\n      }\r\n    }\r\n    \r\n    // Load selected mods\r\n    const savedSelections = StorageService.loadSelectedModsFromStorage();\r\n    if (savedSelections) {\r\n      setTimeout(() => {\r\n        this.modList.applySelections(savedSelections);\r\n      }, 300);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Clear storage and reset app state\r\n   */\r\n  clearStorage() {\r\n    StorageService.clearStorage();\r\n    \r\n    // Reset UI\r\n    this.searchInput.value = '';\r\n    this.currentFilters = {\r\n      search: '',\r\n      race: '',\r\n      bodyType: ''\r\n    };\r\n    \r\n    // Reset dropdowns\r\n    this.raceDropdown.setValue('');\r\n    this.btDropdown.setValue('');\r\n    \r\n    // Reload mods view\r\n    this.filterMods();\r\n    this.updateFilterDropdowns();\r\n    \r\n    showStatus('success', 'All filters and selections have been cleared.', this.statusMessage);\r\n  }\r\n}\r\n\r\n// Initialize the app when the DOM is ready\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  window.app = new App();\r\n});\r\n\r\n// Make utilities available globally for compatibility with old HTML\r\nwindow.selectAll = (state) => window.app.modList.selectAll(state);\r\nwindow.clearStorage = () => window.app.clearStorage();"],"names":["Dropdown","constructor","id","onChange","dropdownElement","document","getElementById","selectedElement","querySelector","optionsElement","selectedTextElement","selectedIconElement","setupEventListeners","addEventListener","e","stopPropagation","toggle","options","querySelectorAll","forEach","option","selectOption","close","dropdown","classList","remove","selected","value","dataset","text","textContent","icon","src","bodyTypeId","alt","opt","setValue","getValue","updateOptions","innerHTML","createElement","className","name","count","undefined","appendChild","RaceModal","onSelect","onSkip","modalElement","gridElement","confirmButton","skipButton","selectedRace","hide","populateRaces","races","filter","race","charAt","el","add","disabled","show","style","display","getRaceName","raceMap","getBodyTypeName","bt","btMap","toUpperCase","getFileNameFromUrl","url","urlObj","URL","nameParam","searchParams","get","decodeURIComponent","split","pop","debounce","func","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","showStatus","type","message","statusElement","RACE_ICONS","BODY_TYPES","STORAGE_KEYS","SELECTED_PRESETS","APP_STATE","VISITED_BEFORE","ModList","onSelectionChange","modListElement","currentSelections","renderMods","mods","saveCurrentSelections","mod","card","raceName","raceIcon","bodyTypeName","bodyType","isChecked","originalLink","downloadUrl","imagePath","displayName","checkbox","modId","closest","applySelections","selections","checked","selectAll","state","getSelectedUrls","map","getSelectedCount","Object","keys","DownloadManager","downloadProgressElement","progressBarElement","downloadedCountElement","totalCountElement","progressStatusElement","statusMessageElement","generateBtnElement","isGenerating","generatePack","selectedUrls","width","zip","JSZip","folder","failedFiles","downloadedCount","file","response","fetch","ok","Error","blob","fileName","progressPercentage","error","console","push","Promise","resolve","content","generateAsync","compression","compressionOptions","level","onUpdate","metadata","compressionPercent","Math","round","percent","saveAs","FALLBACK_MODS","ModService","filteredMods","availableRaces","loadMods","json","fetchError","log","identifyAvailableRaces","raceCounts","raceId","capitalizeRaceName","sort","a","b","localeCompare","part","slice","join","filterMods","query","normalizedQuery","toLowerCase","matchName","includes","matchRace","matchBT","getFilterCounts","btCounts","getAvailableRaces","getAllMods","getFilteredMods","StorageService","saveStateToStorage","searchQuery","raceFilter","btFilter","localStorage","setItem","JSON","stringify","saveSelectedModsToStorage","selectedModIds","loadStateFromStorage","savedState","getItem","parse","loadSelectedModsFromStorage","savedSelectedMods","hasVisitedBefore","setVisitedBefore","clearStorage","removeItem","App","searchInput","modCount","selectionCounter","selectedCountElement","statusMessage","generateBtn","modList","handleSelectionChange","bind","raceDropdown","handleRaceChange","btDropdown","handleBodyTypeChange","raceModal","handleRaceSelect","handleRaceSkip","downloadManager","currentFilters","search","initializeApp","setupRaceModal","updateFilterDropdowns","updateModCount","preventDefault","selectedMods","selectedCount","find","r","savedSelections","totalMods","bodyTypeOptions","window","app"],"mappings":"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"}