{"version":3,"file":"bundle.js","sources":["../frontend/src/js/components/Dropdown.js","../frontend/src/js/components/RaceModal.js","../frontend/src/js/utils/helpers.js","../frontend/src/js/utils/constants.js","../frontend/src/js/components/ModList.js","../frontend/src/js/components/DownloadManager.js","../frontend/src/js/services/ModService.js","../frontend/src/js/components/SelectionModal.js","../frontend/src/js/services/StorageService.js","../frontend/src/js/main.js"],"sourcesContent":["/**\n * Dropdown component\n */\n\nclass Dropdown {\n  /**\n   * Create a new dropdown\n   * @param {string} id - Dropdown element ID\n   * @param {Function} onChange - Callback function when option is selected\n   */\n  constructor(id, onChange) {\n    this.id = id;\n    this.dropdownElement = document.getElementById(id);\n    this.selectedElement = this.dropdownElement.querySelector('.dropdown-selected');\n    this.optionsElement = this.dropdownElement.querySelector('.dropdown-options');\n    this.selectedTextElement = this.dropdownElement.querySelector('.dropdown-text');\n    this.selectedIconElement = this.dropdownElement.querySelector('.dropdown-icon');\n    this.onChange = onChange || (() => {});\n    \n    this.setupEventListeners();\n  }\n  \n  /**\n   * Set up event listeners\n   */\n  setupEventListeners() {\n    // Toggle dropdown when the selected element is clicked\n    this.selectedElement.addEventListener('click', (e) => {\n      e.stopPropagation();\n      this.toggle();\n    });\n    \n    // Add click event to each option\n    const options = this.optionsElement.querySelectorAll('.dropdown-option');\n    options.forEach(option => {\n      option.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.selectOption(option);\n      });\n    });\n    \n    // Close dropdown when clicking outside\n    document.addEventListener('click', () => {\n      this.close();\n    });\n  }\n  \n  /**\n   * Toggle dropdown open/closed\n   */\n  toggle() {\n    // Close all other dropdowns first\n    document.querySelectorAll('.dropdown-options').forEach(dropdown => {\n      if (dropdown !== this.optionsElement) {\n        dropdown.classList.remove('show');\n      }\n    });\n    \n    document.querySelectorAll('.dropdown-selected').forEach(selected => {\n      if (selected !== this.selectedElement) {\n        selected.classList.remove('active');\n      }\n    });\n    \n    // Toggle this dropdown\n    this.optionsElement.classList.toggle('show');\n    this.selectedElement.classList.toggle('active');\n  }\n  \n  /**\n   * Close dropdown\n   */\n  close() {\n    this.optionsElement.classList.remove('show');\n    this.selectedElement.classList.remove('active');\n  }\n  \n  /**\n   * Select an option\n   * @param {HTMLElement} option - Option element to select\n   */\n  selectOption(option) {\n    const value = option.dataset.value;\n    const text = option.querySelector('span').textContent;\n    let icon = null;\n    \n    // Récupérer l'icône seulement pour le dropdown des races\n    if (this.id === 'raceDropdown') {\n      icon = option.querySelector('img')?.src;\n    }\n    \n    // Update selected display\n    this.selectedTextElement.textContent = text;\n    \n    // Mettre à jour l'icône seulement si on est dans le dropdown des races\n    if (this.id === 'raceDropdown' && this.selectedIconElement && icon) {\n      this.selectedIconElement.src = icon;\n      this.selectedIconElement.alt = text;\n    }\n    \n    this.selectedElement.dataset.value = value;\n    \n    // Mark the selected option\n    this.optionsElement.querySelectorAll('.dropdown-option').forEach(opt => {\n      opt.classList.toggle('selected', opt.dataset.value === value);\n    });\n    \n    // Close the dropdown\n    this.close();\n    \n    // Call the change handler\n    this.onChange(value, text, icon);\n  }\n  \n  /**\n   * Programmatically select an option by value\n   * @param {string} value - Value of the option to select\n   */\n  setValue(value) {\n    const option = this.optionsElement.querySelector(`.dropdown-option[data-value=\"${value}\"]`);\n    if (option) {\n      this.selectOption(option);\n    }\n  }\n  \n  /**\n   * Get the current value\n   * @returns {string} Current value\n   */\n  getValue() {\n    return this.selectedElement.dataset.value;\n  }\n  \n  /**\n   * Update options dynamically\n   * @param {Array} options - Array of option objects with id, name, icon, and count properties\n   */\n  updateOptions(options) {\n    // Clear existing options\n    this.optionsElement.innerHTML = '';\n    \n    // Create new options\n    options.forEach(opt => {\n      const option = document.createElement('div');\n      option.className = 'dropdown-option';\n      option.dataset.value = opt.id;\n      \n      // Pour le dropdown des races, inclure l'icône\n      if (this.id === 'raceDropdown') {\n        option.innerHTML = `\n          <img src=\"${opt.icon}\" alt=\"${opt.name}\" class=\"dropdown-icon\">\n          <span>${opt.name} (${opt.count !== undefined ? opt.count : 0})</span>\n        `;\n      } else {\n        // Pour les autres dropdowns, y compris body type (sans icône)\n        option.innerHTML = `\n          <span>${opt.name} (${opt.count !== undefined ? opt.count : 0})</span>\n        `;\n      }\n      \n      option.addEventListener('click', (e) => {\n        e.stopPropagation();\n        this.selectOption(option);\n      });\n      \n      this.optionsElement.appendChild(option);\n    });\n  }\n}\n\nexport default Dropdown;","/**\r\n * Race selection modal component\r\n */\r\n\r\nclass RaceModal {\r\n  /**\r\n   * Create a new race modal\r\n   * @param {Function} onSelect - Callback when race is selected\r\n   * @param {Function} onSkip - Callback when selection is skipped\r\n   */\r\n  constructor(onSelect, onSkip) {\r\n    this.modalElement = document.getElementById('raceModal');\r\n    this.gridElement = document.getElementById('raceGrid');\r\n    this.confirmButton = document.getElementById('confirmRaceBtn');\r\n    this.skipButton = document.getElementById('skipRaceBtn');\r\n    this.selectedRace = '';\r\n    this.onSelect = onSelect || (() => {});\r\n    this.onSkip = onSkip || (() => {});\r\n    \r\n    this.setupEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Set up event listeners\r\n   */\r\n  setupEventListeners() {\r\n    this.confirmButton.addEventListener('click', () => {\r\n      if (this.selectedRace) {\r\n        this.onSelect(this.selectedRace);\r\n        this.hide();\r\n      }\r\n    });\r\n    \r\n    this.skipButton.addEventListener('click', () => {\r\n      this.onSkip();\r\n      this.hide();\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Populate the modal with race options\r\n   * @param {Array} races - Array of race objects with id, name, and icon properties\r\n   */\r\n  populateRaces(races) {\r\n    // Clear existing options\r\n    this.gridElement.innerHTML = '';\r\n    \r\n    // Add new options (excluding \"All Races\")\r\n    races.filter(race => race.id !== '').forEach(race => {\r\n      const option = document.createElement('div');\r\n      option.className = 'race-option';\r\n      option.dataset.race = race.id;\r\n      \r\n      option.innerHTML = `\r\n        <img src=\"${race.icon}\" alt=\"${race.name}\" onerror=\"this.onerror=null; this.src='data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2260%22%20height%3D%2260%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Ctext%20x%3D%2250%25%22%20y%3D%2250%25%22%20font-family%3D%22Arial%22%20font-size%3D%2220%22%20fill%3D%22%23ffffff%22%20text-anchor%3D%22middle%22%20dominant-baseline%3D%22middle%22%3E${race.name.charAt(0)}%3C%2Ftext%3E%3C%2Fsvg%3E';\">\r\n        <div class=\"race-name\">${race.name}</div>\r\n      `;\r\n      \r\n      option.addEventListener('click', () => {\r\n        // Deselect all others\r\n        document.querySelectorAll('.race-option').forEach(el => {\r\n          el.classList.remove('active');\r\n        });\r\n        \r\n        // Select this one\r\n        option.classList.add('active');\r\n        this.selectedRace = race.id;\r\n        \r\n        // Enable the confirm button\r\n        this.confirmButton.disabled = false;\r\n      });\r\n      \r\n      this.gridElement.appendChild(option);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Show the modal\r\n   */\r\n  show() {\r\n    this.modalElement.style.display = 'flex';\r\n    this.selectedRace = '';\r\n    this.confirmButton.disabled = true;\r\n    \r\n    // Deselect all options\r\n    document.querySelectorAll('.race-option').forEach(el => {\r\n      el.classList.remove('active');\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Hide the modal\r\n   */\r\n  hide() {\r\n    this.modalElement.style.display = 'none';\r\n  }\r\n}\r\n\r\nexport default RaceModal;","/**\r\n * Helper functions for the application\r\n */\r\n\r\n/**\r\n * Get race display name from race ID\r\n * @param {string} race - Race ID\r\n * @returns {string} Race display name\r\n */\r\nexport function getRaceName(race) {\r\n  const raceMap = {\r\n    'dragonborn': 'Dragonborn',\r\n    'drow': 'Drow',\r\n    'dwarf': 'Dwarf',\r\n    'elf': 'Elf',\r\n    'githyanki': 'Githyanki',\r\n    'gnome': 'Gnome',\r\n    'half-elf': 'Half-Elf',\r\n    'halfling': 'Halfling',\r\n    'half-orc': 'Half-Orc',\r\n    'human': 'Human',\r\n    'tiefling': 'Tiefling'\r\n  };\r\n  return raceMap[race] || race;\r\n}\r\n\r\n/**\r\n * Get body type display name from body type ID\r\n * @param {string} bt - Body type ID\r\n * @returns {string} Body type display name\r\n */\r\nexport function getBodyTypeName(bt) {\r\n  const btMap = {\r\n    'bt1': 'Female',\r\n    'bt2': 'Male',\r\n    'bt4': 'Male - Strong'\r\n  };\r\n  return btMap[bt] || bt.toUpperCase();\r\n}\r\n\r\n/**\r\n * Get filename from URL\r\n * @param {string} url - URL to extract filename from\r\n * @returns {string} Filename\r\n */\r\nexport function getFileNameFromUrl(url) {\r\n  try {\r\n    const urlObj = new URL(url);\r\n    const nameParam = urlObj.searchParams.get('n');\r\n    if (nameParam) {\r\n      return decodeURIComponent(nameParam);\r\n    }\r\n    return decodeURIComponent(url.split(\"/\").pop().split(\"?\")[0]);\r\n  } catch (e) {\r\n    return url.split(\"/\").pop().split(\"?\")[0];\r\n  }\r\n}\r\n\r\n/**\r\n * Create a debounced function that delays invoking func until after wait milliseconds\r\n * @param {Function} func - Function to debounce\r\n * @param {number} delay - Delay in milliseconds\r\n * @returns {Function} Debounced function\r\n */\r\nexport function debounce(func, delay) {\r\n  let timeoutId;\r\n  return function(...args) {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    timeoutId = setTimeout(() => {\r\n      func.apply(this, args);\r\n      timeoutId = null;\r\n    }, delay);\r\n  };\r\n}\r\n\r\n/**\r\n * Show a status message\r\n * @param {string} type - Message type ('success' or 'error')\r\n * @param {string} message - Message text\r\n * @param {HTMLElement} statusElement - Status element\r\n */\r\nexport function showStatus(type, message, statusElement) {\r\n  statusElement.textContent = message;\r\n  statusElement.className = `status ${type}`;\r\n  statusElement.style.display = 'block';\r\n  \r\n  setTimeout(() => {\r\n    statusElement.style.display = 'none';\r\n  }, 5000);\r\n}","/**\r\n * Configuration values and constants\r\n */\r\n\r\n// Race icons configuration\r\nexport const RACE_ICONS = {\r\n  '': 'images/races/150px-Race_Human.png', // Default for \"All Races\"\r\n  'dragonborn': 'images/races/150px-Race_Dragonborn.png',\r\n  'drow': 'images/races/150px-Race_Drow.png',\r\n  'dwarf': 'images/races/150px-Race_Dwarf.png',\r\n  'elf': 'images/races/150px-Race_Elf.png',\r\n  'githyanki': 'images/races/150px-Race_Githyanki.png',\r\n  'gnome': 'images/races/150px-Race_Gnome.png',\r\n  'half-elf': 'images/races/150px-Race_Half-Elf.png',\r\n  'halfling': 'images/races/150px-Race_Halfling.png',\r\n  'half-orc': 'images/races/150px-Race_Half-Orc.png',\r\n  'human': 'images/races/150px-Race_Human.png',\r\n  'tiefling': 'images/races/150px-Race_Tiefling.png'\r\n};\r\n\r\n// Body type configuration\r\nexport const BODY_TYPES = {\r\n  '': {\r\n    name: 'All Types',\r\n    icon: 'images/body_types/body_type_all.png'\r\n  },\r\n  'bt1': {\r\n    name: 'BT1 - Female',\r\n    icon: 'images/body_types/body_type_female.png'\r\n  },\r\n  'bt2': {\r\n    name: 'BT2 - Male',\r\n    icon: 'images/body_types/body_type_male.png'\r\n  },\r\n  'bt4': {\r\n    name: 'BT4 - Male - Strong',\r\n    icon: 'images/body_types/body_type_male_strong.png'\r\n  }\r\n};\r\n\r\n// Race names mapping\r\nexport const RACE_NAMES = {\r\n  'dragonborn': 'Dragonborn',\r\n  'drow': 'Drow',\r\n  'dwarf': 'Dwarf',\r\n  'elf': 'Elf',\r\n  'githyanki': 'Githyanki',\r\n  'gnome': 'Gnome',\r\n  'half-elf': 'Half-Elf',\r\n  'halfling': 'Halfling',\r\n  'half-orc': 'Half-Orc',\r\n  'human': 'Human',\r\n  'tiefling': 'Tiefling',\r\n  '': 'All Races'\r\n};\r\n\r\n// Local Storage keys\r\nexport const STORAGE_KEYS = {\r\n  SELECTED_PRESETS: 'selectedHeadPresets',\r\n  APP_STATE: 'headPresetState',\r\n  VISITED_BEFORE: 'hasVisitedBefore'\r\n};","/**\r\n * ModList component to render and manage mod cards\r\n */\r\nimport { getRaceName, getBodyTypeName } from '../utils/helpers';\r\nimport { RACE_ICONS } from '../utils/constants';\r\n\r\nclass ModList {\r\n  /**\r\n   * Create a new mod list\r\n   * @param {Function} onSelectionChange - Callback when selection changes\r\n   */\r\n  constructor(onSelectionChange) {\r\n    this.modListElement = document.getElementById('modList');\r\n    this.onSelectionChange = onSelectionChange || (() => {});\r\n    this.currentSelections = {};\r\n  }\r\n  \r\n  /**\r\n   * Render mod cards\r\n   * @param {Array} mods - Array of mods to render\r\n   */\r\n  renderMods(mods) {\r\n    // Save current selections before clearing\r\n    this.saveCurrentSelections();\r\n    \r\n    // Clear the list\r\n    this.modListElement.innerHTML = '';\r\n    \r\n    // Show message if no mods found\r\n    if (mods.length === 0) {\r\n      this.modListElement.innerHTML = `\r\n        <p style=\"grid-column: 1/-1; text-align: center; padding: 2rem;\">\r\n          No presets found matching these criteria.\r\n        </p>`;\r\n      return;\r\n    }\r\n    \r\n    // Render each mod\r\n    mods.forEach(mod => {\r\n      const card = document.createElement('label');\r\n      card.className = 'mod-card';\r\n      card.dataset.id = mod.id;\r\n      card.dataset.name = mod.name;\r\n      \r\n      // Get race name and icon\r\n      const raceName = getRaceName(mod.race);\r\n      const raceIcon = RACE_ICONS[mod.race] || 'images/races/150px-Race_Human.png';\r\n      const bodyTypeName = getBodyTypeName(mod.bodyType);\r\n      \r\n      // Check if this mod was previously selected using the unique key\r\n      const uniqueKey = mod.id + '-' + mod.name;\r\n      const isChecked = this.currentSelections[uniqueKey] ? 'checked' : '';\r\n      \r\n      // Add original link if it exists\r\n      const originalLink = mod.originalLink \r\n        ? `<a href=\"${mod.originalLink}\" class=\"original-link\" target=\"_blank\" title=\"View original mod\" onclick=\"event.stopPropagation();\">\r\n            <i class=\"fas fa-external-link-alt\"></i>\r\n          </a>` \r\n        : '';\r\n      \r\n      // Get info link - use mod-specific link if available, otherwise use default\r\n      const infoLink = mod.infoLink || 'https://bg3.wiki';\r\n      \r\n      card.innerHTML = `\r\n        <input type=\"checkbox\" value=\"${mod.downloadUrl}\" ${isChecked} />\r\n        <div class=\"image-container\">\r\n          <img src=\"${mod.imagePath}\" alt=\"${mod.displayName}\" />\r\n          ${originalLink}\r\n        </div>\r\n        <div class=\"content\">\r\n          <div class=\"title\">${mod.displayName}</div>\r\n          <div class=\"badges-container\">\r\n            <div class=\"badges\">\r\n              <div class=\"badge race-badge\" style=\"background-image: url(${raceIcon}); background-size: 12px; background-repeat: no-repeat; background-position: 5px center; padding-left: 22px;\">\r\n                ${raceName}\r\n              </div>\r\n              <div class=\"badge body-type-badge\">\r\n                ${mod.bodyType.toUpperCase()} - ${bodyTypeName}\r\n              </div>\r\n            </div>\r\n            <div class=\"badge-link-wrapper\">\r\n              <div class=\"badge link-badge\">\r\n                <a href=\"${infoLink}\" target=\"_blank\" onclick=\"event.stopPropagation();\">\r\n                  <i class=\"fas fa-info-circle\"></i> More info\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      \r\n      // Add event listener for checkbox changes\r\n      const checkbox = card.querySelector('input[type=checkbox]');\r\n      checkbox.addEventListener('change', () => {\r\n        this.saveCurrentSelections();\r\n        this.onSelectionChange(this.currentSelections);\r\n      });\r\n      \r\n      this.modListElement.appendChild(card);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Save current selections using a unique key (id-name)\r\n   */\r\n  saveCurrentSelections() {\r\n    this.currentSelections = {};\r\n    this.modListElement.querySelectorAll('.mod-card input[type=checkbox]:checked').forEach(checkbox => {\r\n      const cardElement = checkbox.closest('.mod-card');\r\n      const modId = cardElement.dataset.id;\r\n      const modName = cardElement.dataset.name;\r\n      if (modId && modName) {\r\n          const uniqueKey = modId + '-' + modName;\r\n          this.currentSelections[uniqueKey] = true;\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Apply stored selections using the unique key (id-name)\r\n   * @param {Object} selections - Object with unique keys (id-name)\r\n   */\r\n  applySelections(selections) {\r\n    if (!selections) return;\r\n    \r\n    this.modListElement.querySelectorAll('.mod-card').forEach(card => {\r\n      const modId = card.dataset.id;\r\n      const modName = card.dataset.name;\r\n      if (modId && modName) {\r\n          const uniqueKey = modId + '-' + modName;\r\n          if (selections[uniqueKey]) {\r\n            const checkbox = card.querySelector('input[type=checkbox]');\r\n            if (checkbox) {\r\n              checkbox.checked = true;\r\n            }\r\n          }\r\n      }\r\n    });\r\n    \r\n    this.saveCurrentSelections();\r\n    this.onSelectionChange(this.currentSelections);\r\n  }\r\n  \r\n  /**\r\n   * Select or deselect all mods\r\n   * @param {boolean} state - Whether to select (true) or deselect (false)\r\n   */\r\n  selectAll(state) {\r\n    this.modListElement.querySelectorAll(\".mod-card input[type=checkbox]\").forEach(checkbox => {\r\n      checkbox.checked = state;\r\n    });\r\n    \r\n    this.saveCurrentSelections();\r\n    this.onSelectionChange(this.currentSelections);\r\n  }\r\n  \r\n  /**\r\n   * Get selected mod URLs\r\n   * @returns {Array} Array of selected mod URLs\r\n   */\r\n  getSelectedUrls() {\r\n    return [...this.modListElement.querySelectorAll('input[type=checkbox]:checked')].map(el => el.value);\r\n  }\r\n  \r\n  /**\r\n   * Get selected mod count based on unique keys\r\n   * @returns {number} Number of selected unique presets\r\n   */\r\n  getSelectedCount() {\r\n    return Object.keys(this.currentSelections).length;\r\n  }\r\n}\r\n\r\nexport default ModList;","/**\n * DownloadManager component for generating ZIP packages\n */\nimport { getFileNameFromUrl, showStatus } from '../utils/helpers';\n\nclass DownloadManager {\n  constructor() {\n    // Main progress elements\n    this.downloadProgressElement = document.getElementById('downloadProgress');\n    this.progressBarElement = document.getElementById('progressBar');\n    this.downloadedCountElement = document.getElementById('downloadedCount');\n    this.totalCountElement = document.getElementById('totalCount');\n    this.progressStatusElement = document.getElementById('progressStatus');\n    this.statusMessageElement = document.getElementById('statusMessage');\n    this.generateBtnElement = document.getElementById('generateBtn');\n    \n    // Modal progress elements\n    this.modalDownloadProgressElement = document.getElementById('modalDownloadProgress');\n    this.modalProgressBarElement = document.getElementById('modalProgressBar');\n    this.modalDownloadedCountElement = document.getElementById('modalDownloadedCount');\n    this.modalTotalCountElement = document.getElementById('modalTotalCount');\n    this.modalProgressStatusElement = document.getElementById('modalProgressStatus');\n    this.modalGenerateBtnElement = document.getElementById('modalGenerateBtn');\n    \n    this.isGenerating = false;\n  }\n  \n  /**\n   * Generate a mod pack from selected URLs\n   * @param {Array} selectedUrls - Array of URLs to download and package\n   * @param {boolean} fromModal - Whether the action was triggered from the modal\n   * @returns {Promise<void>} Promise that resolves when pack is generated\n   */\n  async generatePack(selectedUrls, fromModal = false) {\n    // Prevent multiple generation attempts\n    if (this.isGenerating) return;\n    this.isGenerating = true;\n    \n    if (selectedUrls.length === 0) {\n      showStatus('error', 'Please select at least one preset to generate your pack.', this.statusMessageElement);\n      this.isGenerating = false;\n      return;\n    }\n    \n    try {\n      // Select the elements to use based on context\n      const progressElement = fromModal ? this.modalDownloadProgressElement : this.downloadProgressElement;\n      const progressBarElement = fromModal ? this.modalProgressBarElement : this.progressBarElement;\n      const downloadedCountElement = fromModal ? this.modalDownloadedCountElement : this.downloadedCountElement;\n      const totalCountElement = fromModal ? this.modalTotalCountElement : this.totalCountElement;\n      const progressStatusElement = fromModal ? this.modalProgressStatusElement : this.progressStatusElement;\n      const generateBtnElement = fromModal ? this.modalGenerateBtnElement : this.generateBtnElement;\n      \n      // Initialize progress UI\n      downloadedCountElement.textContent = '0';\n      totalCountElement.textContent = selectedUrls.length;\n      progressBarElement.style.width = '0%';\n      progressStatusElement.textContent = 'Initializing download...';\n      progressElement.style.display = 'block';\n      generateBtnElement.disabled = true;\n      \n      const zip = new JSZip();\n      const folder = zip.folder(\"Collection_Heads_Based\");\n      let failedFiles = [];\n      let downloadedCount = 0;\n      \n      for (const file of selectedUrls) {\n        try {\n          // Update status\n          progressStatusElement.textContent = `Downloading ${getFileNameFromUrl(file)}...`;\n          \n          const response = await fetch(file);\n          if (!response.ok) throw new Error('Failed to fetch');\n          \n          const blob = await response.blob();\n          // Extract the name parameter from the URL if it exists\n          let fileName;\n          const url = new URL(file);\n          const nameParam = url.searchParams.get('n');\n          if (nameParam) {\n            fileName = decodeURIComponent(nameParam);\n          } else {\n            fileName = decodeURIComponent(file.split(\"/\").pop().split(\"?\")[0]);\n          }\n          folder.file(fileName, blob);\n          \n          // Update counter and progress bar\n          downloadedCount++;\n          downloadedCountElement.textContent = downloadedCount;\n          const progressPercentage = (downloadedCount / selectedUrls.length) * 100;\n          progressBarElement.style.width = `${progressPercentage}%`;\n        } catch (error) {\n          console.error(\"Error fetching\", file, error);\n          failedFiles.push(file);\n          \n          // Update status for failure\n          progressStatusElement.textContent = `Failed to download ${getFileNameFromUrl(file)}`;\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Brief pause to show error\n        }\n      }\n      \n      // Finalize zip\n      progressStatusElement.textContent = 'Finalizing your pack...';\n      \n      const content = await zip.generateAsync({ \n        type: \"blob\",\n        compression: \"DEFLATE\",\n        compressionOptions: { level: 5 },\n        // Add progress callback for ZIP generation\n        onUpdate: metadata => {\n          const compressionPercent = Math.round(metadata.percent);\n          progressBarElement.style.width = `${compressionPercent}%`;\n        }\n      });\n      \n      progressStatusElement.textContent = 'Download ready!';\n      saveAs(content, \"Collection_Heads_Based.zip\");\n      \n      if (failedFiles.length > 0) {\n        showStatus('error', `${failedFiles.length} file(s) could not be downloaded.`, this.statusMessageElement);\n      } else {\n        showStatus('success', 'Your pack has been generated successfully!', this.statusMessageElement);\n      }\n    } catch (error) {\n      console.error(\"Error generating pack:\", error);\n      showStatus('error', 'An error occurred while generating the pack.', this.statusMessageElement);\n    } finally {\n      // Hide progress UI after a short delay\n      setTimeout(() => {\n        if (fromModal) {\n          this.modalDownloadProgressElement.style.display = 'none';\n          this.modalGenerateBtnElement.disabled = false;\n        } else {\n          this.downloadProgressElement.style.display = 'none';\n          this.generateBtnElement.disabled = false;\n        }\n        this.isGenerating = false;\n      }, 2000);\n    }\n  }\n}\n\nexport default DownloadManager;","/**\r\n * Service to handle mod loading and filtering\r\n */\r\nimport { getRaceName, getBodyTypeName } from '../utils/helpers';\r\n\r\n// Fallback mods data for file:// protocol usage\r\nconst FALLBACK_MODS = [\r\n  {\r\n    \"id\": \"daenerys\",\r\n    \"name\": \"daenerys\",\r\n    \"displayName\": \"Daenerys Head Preset - JUSTFORTEST\",\r\n    \"race\": \"human\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/head-a.jpg\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/zmEqUzvCM0ih.zip?n=Daenerys%20Head%20Preset%202.0.0.zip\"\r\n  },\r\n  {\r\n    \"id\": \"aurora\",\r\n    \"name\": \"aurora_elf\",\r\n    \"displayName\": \"Aurora Head Preset - ELF\",\r\n    \"race\": \"elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Aurora-ELF.webp\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/ae6HiGBnKRI3.pak?n=Elf_F%20-%20Violet's%20Preset%201%20Aurora%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"aurora\",\r\n    \"name\": \"aurora_half-elf\",\r\n    \"displayName\": \"Aurora Head Preset - HALF-ELF\",\r\n    \"race\": \"half-elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Aurora-HELF.webp\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/OltCbM5oJgZa.pak?n=Helf_F%20-%20Violet's%20Preset%201%20Aurora%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-human\",\r\n    \"displayName\": \"Akira - Head Preset - HUMAN\",\r\n    \"race\": \"human\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/cDZ6IFLjonhd.pak?n=Human_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-tiefling\",\r\n    \"displayName\": \"Akira - Head Preset - TIEFLING\",\r\n    \"race\": \"tiefling\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/yU47qaW2y4nR.pak?n=Tiefling_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  }, \r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-drow\",\r\n    \"displayName\": \"Akira - Head Preset - DROW\",\r\n    \"race\": \"drow\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/jTSJty89eKG8.pak?n=Drow_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-elf\",\r\n    \"displayName\": \"Akira - Head Preset - ELF\",\r\n    \"race\": \"elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/j8SoFD5kJmAs.pak?n=Elf_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  },\r\n  {\r\n    \"id\": \"akira\",\r\n    \"name\": \"akira-half-elf\",\r\n    \"displayName\": \"Akira - Head Preset - HELF\",\r\n    \"race\": \"half-elf\",\r\n    \"bodyType\": \"bt1\",\r\n    \"imagePath\": \"images/Akira.png\",\r\n    \"downloadUrl\": \"https://f.rpghq.org/aMU9lzKwqGYE.pak?n=Helf_F%20-%20-%3D%3BAkira%3B%3D-%20%5BDONE%5D.pak\"\r\n  }\r\n];\r\n\r\nclass ModService {\r\n  constructor() {\r\n    this.mods = [];\r\n    this.filteredMods = [];\r\n    this.availableRaces = [];\r\n  }\r\n  \r\n  /**\r\n   * Load mods from the JSON file or fallback to embedded data\r\n   * @returns {Promise<Array>} Array of mods\r\n   */\r\n  async loadMods() {\r\n    try {\r\n      // Try to fetch mods.json first\r\n      try {\r\n        const response = await fetch('mods.json');\r\n        if (!response.ok) throw new Error('Failed to load mods data');\r\n        \r\n        this.mods = await response.json();\r\n      } catch (fetchError) {\r\n        // If fetch fails (likely due to file:// protocol), use the fallback data\r\n        console.log(\"Using embedded mods data instead of fetch due to:\", fetchError.message);\r\n        this.mods = FALLBACK_MODS;\r\n      }\r\n      \r\n      this.filteredMods = [...this.mods];\r\n      \r\n      // Identify available races\r\n      this.identifyAvailableRaces();\r\n      \r\n      return this.mods;\r\n    } catch (error) {\r\n      console.error(\"Error loading mods:\", error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Identify available races from loaded mods\r\n   */\r\n  identifyAvailableRaces() {\r\n    // Add \"All Races\" option by default\r\n    this.availableRaces = [{ \r\n      id: '', \r\n      name: 'All Races', \r\n      icon: 'images/races/150px-Race_Human.png',\r\n      count: this.mods.length\r\n    }];\r\n    \r\n    // Count occurrences of each race\r\n    const raceCounts = {};\r\n    this.mods.forEach(mod => {\r\n      if (mod.race) {\r\n        raceCounts[mod.race] = (raceCounts[mod.race] || 0) + 1;\r\n      }\r\n    });\r\n    \r\n    // Create entries for races that have presets\r\n    for (const raceId in raceCounts) {\r\n      if (raceCounts[raceId] > 0) {\r\n        this.availableRaces.push({\r\n          id: raceId,\r\n          name: getRaceName(raceId),\r\n          icon: `images/races/150px-Race_${this.capitalizeRaceName(raceId)}.png`,\r\n          count: raceCounts[raceId]\r\n        });\r\n      }\r\n    }\r\n    \r\n    // Sort races alphabetically (after \"All Races\")\r\n    this.availableRaces.sort((a, b) => {\r\n      if (a.id === '') return -1;\r\n      if (b.id === '') return 1;\r\n      return a.name.localeCompare(b.name);\r\n    });\r\n    \r\n    return this.availableRaces;\r\n  }\r\n  \r\n  /**\r\n   * Capitalize each part of a race name that contains hyphens\r\n   * @param {string} raceId - Race identifier (e.g., 'half-elf')\r\n   * @returns {string} Capitalized race name (e.g., 'Half-Elf')\r\n   */\r\n  capitalizeRaceName(raceId) {\r\n    return raceId.split('-')\r\n      .map(part => part.charAt(0).toUpperCase() + part.slice(1))\r\n      .join('-');\r\n  }\r\n  \r\n  /**\r\n   * Filter mods based on search query and selected filters\r\n   * @param {string} query - Search query\r\n   * @param {string} race - Selected race filter\r\n   * @param {string} bodyType - Selected body type filter\r\n   * @returns {Array} Filtered mods\r\n   */\r\n  filterMods(query, race, bodyType) {\r\n    const normalizedQuery = query.toLowerCase();\r\n    \r\n    this.filteredMods = this.mods.filter(mod => {\r\n      const matchName = mod.name.toLowerCase().includes(normalizedQuery);\r\n      const matchRace = race === \"\" || mod.race === race;\r\n      const matchBT = bodyType === \"\" || mod.bodyType === bodyType;\r\n      \r\n      return matchName && matchRace && matchBT;\r\n    });\r\n    \r\n    return this.filteredMods;\r\n  }\r\n  \r\n  /**\r\n   * Get counts for each filter option\r\n   * @returns {Object} Object containing race and body type counts\r\n   */\r\n  getFilterCounts() {\r\n    // Count races\r\n    const raceCounts = {};\r\n    this.mods.forEach(mod => {\r\n      raceCounts[mod.race] = (raceCounts[mod.race] || 0) + 1;\r\n    });\r\n    \r\n    // Count body types\r\n    const btCounts = {};\r\n    this.mods.forEach(mod => {\r\n      btCounts[mod.bodyType] = (btCounts[mod.bodyType] || 0) + 1;\r\n    });\r\n    \r\n    return { raceCounts, btCounts };\r\n  }\r\n  \r\n  /**\r\n   * Get available races\r\n   * @returns {Array} Available races with counts\r\n   */\r\n  getAvailableRaces() {\r\n    return this.availableRaces;\r\n  }\r\n  \r\n  /**\r\n   * Get all mods\r\n   * @returns {Array} All mods\r\n   */\r\n  getAllMods() {\r\n    return this.mods;\r\n  }\r\n  \r\n  /**\r\n   * Get filtered mods\r\n   * @returns {Array} Filtered mods\r\n   */\r\n  getFilteredMods() {\r\n    return this.filteredMods;\r\n  }\r\n}\r\n\r\nexport default new ModService();","/**\r\n * SelectionModal component for displaying and managing selected presets\r\n */\r\nimport { getRaceName, getBodyTypeName } from '../utils/helpers';\r\nimport { RACE_ICONS } from '../utils/constants';\r\nimport ModService from '../services/ModService';\r\n\r\nclass SelectionModal {\r\n  /**\r\n   * Create a new selection modal\r\n   * @param {Object} modList - ModList component instance\r\n   * @param {Object} downloadManager - DownloadManager instance\r\n   */\r\n  constructor(modList, downloadManager) {\r\n    // Store references to required components\r\n    this.modList = modList;\r\n    this.downloadManager = downloadManager;\r\n    \r\n    // DOM elements\r\n    this.modalElement = document.getElementById('selectionModal');\r\n    this.closeBtn = document.getElementById('closeSelectionBtn');\r\n    this.selectedPresetsList = document.getElementById('selectedPresetsList');\r\n    this.modalGenerateBtn = document.getElementById('modalGenerateBtn');\r\n    this.noSelectionsMessage = document.getElementById('noSelectionsMessage');\r\n    \r\n    // Initialize events\r\n    this.setupEventListeners();\r\n  }\r\n  \r\n  /**\r\n   * Set up event listeners for the modal\r\n   */\r\n  setupEventListeners() {\r\n    // Close button\r\n    this.closeBtn.addEventListener('click', () => {\r\n      this.hide();\r\n    });\r\n    \r\n    // Click outside to close\r\n    this.modalElement.addEventListener('click', (e) => {\r\n      if (e.target === this.modalElement) {\r\n        this.hide();\r\n      }\r\n    });\r\n    \r\n    // Generate button\r\n    this.modalGenerateBtn.addEventListener('click', () => {\r\n      const selectedUrls = this.modList.getSelectedUrls();\r\n      this.downloadManager.generatePack(selectedUrls, true);\r\n    });\r\n    \r\n    // Ajouter un écouteur d'événement pour la touche Escape\r\n    document.addEventListener('keydown', (e) => {\r\n      if (e.key === 'Escape' && !this.modalElement.classList.contains('hidden')) {\r\n        this.hide();\r\n      }\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Show the modal and populate it with selected presets\r\n   */\r\n  show() {\r\n    this.populateSelectedPresets();\r\n    this.modalElement.classList.remove('hidden');\r\n    this.modalElement.classList.add('visible');\r\n    document.body.style.overflow = 'hidden'; // Prevent scrolling behind modal\r\n    \r\n    // Mettre le focus sur le bouton de téléchargement si des préréglages sont sélectionnés\r\n    if (Object.keys(this.modList.currentSelections).length > 0) {\r\n      this.modalGenerateBtn.focus();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Hide the modal\r\n   */\r\n  hide() {\r\n    this.modalElement.classList.remove('visible');\r\n    this.modalElement.classList.add('hidden');\r\n    document.body.style.overflow = '';\r\n  }\r\n  \r\n  /**\r\n   * Populate the modal with selected presets\r\n   */\r\n  populateSelectedPresets() {\r\n    // Clear previous content\r\n    this.selectedPresetsList.innerHTML = '';\r\n    \r\n    // Get selected mod unique keys\r\n    const selectedMods = {};\r\n    const selectionKeys = Object.keys(this.modList.currentSelections); // Array of unique keys\r\n    const allMods = ModService.getAllMods();\r\n    \r\n    // Find the specific mod object for each unique selection key\r\n    selectionKeys.forEach(uniqueKey => {\r\n        // Assume the uniqueKey is in the format 'id-name' as used elsewhere\r\n        const parts = uniqueKey.match(/^([^-]+)-(.*)$/); // Match 'id-restofname'\r\n        let selectedMod = null;\r\n        if (parts && parts.length === 3) {\r\n            const modId = parts[1];\r\n            const modName = parts[2];\r\n            selectedMod = allMods.find(mod => mod.id === modId && mod.name === modName);\r\n        } else {\r\n             // Fallback or alternative logic if the key format is different\r\n             // Maybe the key *is* the download URL?\r\n             selectedMod = allMods.find(mod => mod.downloadUrl === uniqueKey);\r\n             console.warn(`Could not parse selection key '${uniqueKey}' as 'id-name'. Trying downloadUrl.`);\r\n             if (!selectedMod) {\r\n                console.error(`Could not find mod for key: ${uniqueKey}`);\r\n             }\r\n        }\r\n\r\n        if (selectedMod) {\r\n            // Use the uniqueKey itself to store in the selectedMods object\r\n            selectedMods[uniqueKey] = selectedMod;\r\n        }\r\n    });\r\n        \r\n    const selectedModsArray = Object.values(selectedMods);\r\n    \r\n    // Show message if no selections\r\n    if (selectedModsArray.length === 0) {\r\n      this.noSelectionsMessage.style.display = 'block';\r\n      this.modalGenerateBtn.disabled = true;\r\n      return;\r\n    } else {\r\n      this.noSelectionsMessage.style.display = 'none';\r\n      this.modalGenerateBtn.disabled = false;\r\n    }\r\n    \r\n    // Create a card for each selected mod\r\n    selectedModsArray.forEach(mod => {\r\n      const card = document.createElement('div');\r\n      card.className = 'mod-card';\r\n      card.dataset.id = mod.id;\r\n      card.dataset.name = mod.name;\r\n      \r\n      // Get race name and icon\r\n      const raceName = getRaceName(mod.race);\r\n      const raceIcon = RACE_ICONS[mod.race] || 'images/races/150px-Race_Human.png';\r\n      const bodyTypeName = getBodyTypeName(mod.bodyType);\r\n      \r\n      // Get info link - use mod-specific link if available, otherwise use default\r\n      const infoLink = mod.infoLink || 'https://bg3.wiki';\r\n      \r\n      // Add original link if it exists\r\n      const originalLink = mod.originalLink \r\n        ? `<a href=\"${mod.originalLink}\" class=\"original-link\" target=\"_blank\" title=\"View original mod\" onclick=\"event.stopPropagation();\">\r\n            <i class=\"fas fa-external-link-alt\"></i>\r\n          </a>` \r\n        : '';\r\n      \r\n      // Format card HTML to match the main site cards\r\n      card.innerHTML = `\r\n        <button class=\"remove-mod-btn\" data-id=\"${mod.id}\" data-name=\"${mod.name}\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </button>\r\n        <div class=\"image-container\">\r\n          <img src=\"${mod.imagePath}\" alt=\"${mod.displayName}\" />\r\n          ${originalLink}\r\n        </div>\r\n        <div class=\"content\">\r\n          <div class=\"title\">${mod.displayName}</div>\r\n          <div class=\"badges-container\">\r\n            <div class=\"badges\">\r\n              <div class=\"badge race-badge\" style=\"background-image: url(${raceIcon}); background-size: 12px; background-repeat: no-repeat; background-position: 5px center; padding-left: 22px;\">\r\n                ${raceName}\r\n              </div>\r\n              <div class=\"badge body-type-badge\">\r\n                ${mod.bodyType.toUpperCase()} - ${bodyTypeName}\r\n              </div>\r\n            </div>\r\n            <div class=\"badge-link-wrapper\">\r\n              <div class=\"badge link-badge\">\r\n                <a href=\"${infoLink}\" target=\"_blank\" onclick=\"event.stopPropagation();\">\r\n                  <i class=\"fas fa-info-circle\"></i> More info\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      `;\r\n      \r\n      // Add event listeners for the remove button\r\n      const removeButton = card.querySelector('.remove-mod-btn');\r\n      removeButton.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        this.removeSelectedMod(mod.id, mod.name);\r\n      });\r\n      \r\n      this.selectedPresetsList.appendChild(card);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * Remove a selected mod from the list\r\n   * @param {string} modId - ID of the mod to remove\r\n   * @param {string} modName - Name of the mod to remove\r\n   */\r\n  removeSelectedMod(modId, modName) {\r\n    // Find the corresponding checkbox in the main list\r\n    const modCards = document.querySelectorAll('.mod-card');\r\n    let found = false;\r\n    \r\n    modCards.forEach(card => {\r\n      if (card.dataset.id === modId) {\r\n        const checkbox = card.querySelector('input[type=\"checkbox\"]');\r\n        if (checkbox && checkbox.checked) {\r\n          checkbox.checked = false;\r\n          this.modList.saveCurrentSelections();\r\n          this.modList.onSelectionChange(this.modList.currentSelections);\r\n          found = true;\r\n        }\r\n      }\r\n    });\r\n    \r\n    if (found) {\r\n      // Refresh the selected presets list\r\n      this.populateSelectedPresets();\r\n    }\r\n  }\r\n}\r\n\r\nexport default SelectionModal; ","/**\r\n * Service to handle localStorage operations\r\n */\r\nimport { STORAGE_KEYS } from '../utils/constants';\r\n\r\nclass StorageService {\r\n  /**\r\n   * Save application state to localStorage\r\n   * @param {string} searchQuery - Current search query\r\n   * @param {string} raceFilter - Selected race filter\r\n   * @param {string} btFilter - Selected body type filter\r\n   */\r\n  saveStateToStorage(searchQuery, raceFilter, btFilter) {\r\n    const state = {\r\n      searchQuery: searchQuery,\r\n      raceFilter: raceFilter,\r\n      btFilter: btFilter\r\n    };\r\n    localStorage.setItem(STORAGE_KEYS.APP_STATE, JSON.stringify(state));\r\n  }\r\n  \r\n  /**\r\n   * Save selected mods to localStorage\r\n   * @param {Object} selectedModIds - Object with mod IDs as keys\r\n   */\r\n  saveSelectedModsToStorage(selectedModIds) {\r\n    localStorage.setItem(STORAGE_KEYS.SELECTED_PRESETS, JSON.stringify(selectedModIds));\r\n  }\r\n  \r\n  /**\r\n   * Load application state from localStorage\r\n   * @returns {Object|null} Saved state or null if not found\r\n   */\r\n  loadStateFromStorage() {\r\n    const savedState = localStorage.getItem(STORAGE_KEYS.APP_STATE);\r\n    return savedState ? JSON.parse(savedState) : null;\r\n  }\r\n  \r\n  /**\r\n   * Load selected mods from localStorage\r\n   * @returns {Object|null} Selected mod IDs or null if not found\r\n   */\r\n  loadSelectedModsFromStorage() {\r\n    const savedSelectedMods = localStorage.getItem(STORAGE_KEYS.SELECTED_PRESETS);\r\n    return savedSelectedMods ? JSON.parse(savedSelectedMods) : null;\r\n  }\r\n  \r\n  /**\r\n   * Check if the user has visited the site before\r\n   * @returns {boolean} Whether the user has visited before\r\n   */\r\n  hasVisitedBefore() {\r\n    return !!localStorage.getItem(STORAGE_KEYS.VISITED_BEFORE);\r\n  }\r\n  \r\n  /**\r\n   * Mark that the user has visited the site\r\n   */\r\n  setVisitedBefore() {\r\n    localStorage.setItem(STORAGE_KEYS.VISITED_BEFORE, 'true');\r\n  }\r\n  \r\n  /**\r\n   * Clear all storage\r\n   */\r\n  clearStorage() {\r\n    localStorage.removeItem(STORAGE_KEYS.APP_STATE);\r\n    localStorage.removeItem(STORAGE_KEYS.SELECTED_PRESETS);\r\n  }\r\n}\r\n\r\nexport default new StorageService();","/**\n * Main application entry point\n */\nimport '../css/styles.css';\nimport Dropdown from './components/Dropdown';\nimport RaceModal from './components/RaceModal';\nimport ModList from './components/ModList';\nimport DownloadManager from './components/DownloadManager';\nimport SelectionModal from './components/SelectionModal';\nimport ModService from './services/ModService';\nimport StorageService from './services/StorageService';\nimport { debounce, showStatus } from './utils/helpers';\nimport { BODY_TYPES } from './utils/constants';\n\nclass App {\n  constructor() {\n    // DOM Elements\n    this.searchInput = document.getElementById('searchInput');\n    this.modCount = document.getElementById('modCount');\n    this.selectionCounter = document.getElementById('selectionCounter');\n    this.selectedCountElement = document.getElementById('selectedCount');\n    this.statusMessage = document.getElementById('statusMessage');\n    this.generateBtn = document.getElementById('generateBtn');\n    \n    // Components\n    this.modList = new ModList(this.handleSelectionChange.bind(this));\n    this.raceDropdown = new Dropdown('raceDropdown', this.handleRaceChange.bind(this));\n    this.btDropdown = new Dropdown('btDropdown', this.handleBodyTypeChange.bind(this));\n    this.raceModal = new RaceModal(this.handleRaceSelect.bind(this), this.handleRaceSkip.bind(this));\n    this.downloadManager = new DownloadManager();\n    this.selectionModal = new SelectionModal(this.modList, this.downloadManager);\n    \n    // State\n    this.currentFilters = {\n      search: '',\n      race: '',\n      bodyType: ''\n    };\n    \n    this.setupEventListeners();\n    this.initializeApp();\n  }\n  \n  /**\n   * Initialize the application\n   */\n  async initializeApp() {\n    try {\n      // Load mods\n      await ModService.loadMods();\n      \n      // Render initial mod list\n      this.modList.renderMods(ModService.getFilteredMods());\n      \n      // Update filter dropdowns\n      this.setupRaceModal();\n      this.updateFilterDropdowns();\n      this.updateModCount();\n      \n      // Load saved state and selections\n      this.loadStateFromStorage();\n      \n      // Show success message\n      showStatus('success', `${ModService.getAllMods().length} head presets loaded successfully!`, this.statusMessage);\n      \n      // Check if we need to show race modal (first visit)\n      if (!StorageService.hasVisitedBefore()) {\n        this.raceModal.show();\n        StorageService.setVisitedBefore();\n      }\n    } catch (error) {\n      console.error(\"Error initializing app:\", error);\n      showStatus('error', 'Error loading presets. Please refresh the page.', this.statusMessage);\n    }\n  }\n  \n  /**\n   * Set up event listeners\n   */\n  setupEventListeners() {\n    // Search input\n    this.searchInput.addEventListener('input', () => {\n      this.currentFilters.search = this.searchInput.value;\n      this.filterMods();\n      this.saveStateToStorage();\n    });\n    \n    // Generate button\n    this.generateBtn.addEventListener('click', debounce(() => {\n      const selectedUrls = this.modList.getSelectedUrls();\n      this.downloadManager.generatePack(selectedUrls, false);\n    }, 1000));\n    \n    // Selection counter click (open modal)\n    this.selectionCounter.addEventListener('click', () => {\n      this.selectionModal.show();\n    });\n    \n    // Select/Deselect All buttons\n    document.querySelector('button[onclick=\"selectAll(true)\"]').addEventListener('click', (e) => {\n      e.preventDefault();\n      this.modList.selectAll(true);\n    });\n    \n    document.querySelector('button[onclick=\"selectAll(false)\"]').addEventListener('click', (e) => {\n      e.preventDefault();\n      this.modList.selectAll(false);\n    });\n    \n    // Clear Storage button\n    document.querySelector('button[onclick=\"clearStorage()\"]').addEventListener('click', (e) => {\n      e.preventDefault();\n      this.clearStorage();\n    });\n  }\n  \n  /**\n   * Handle selection change in mod list\n   * @param {Object} selectedMods - Object with selected mod IDs\n   */\n  handleSelectionChange(selectedMods) {\n    // Update selection counter\n    const selectedCount = Object.keys(selectedMods).length;\n    this.selectedCountElement.textContent = selectedCount;\n    \n    // Show/hide counter based on selection\n    if (selectedCount > 0) {\n      this.selectionCounter.classList.add('show');\n    } else {\n      this.selectionCounter.classList.remove('show');\n    }\n    \n    // Update mod count display\n    this.updateModCount();\n    \n    // Save selections to storage\n    StorageService.saveSelectedModsToStorage(selectedMods);\n  }\n  \n  /**\n   * Handle race change in dropdown\n   * @param {string} race - Selected race\n   */\n  handleRaceChange(race) {\n    this.currentFilters.race = race;\n    this.filterMods();\n    this.saveStateToStorage();\n  }\n  \n  /**\n   * Handle body type change in dropdown\n   * @param {string} bodyType - Selected body type\n   */\n  handleBodyTypeChange(bodyType) {\n    this.currentFilters.bodyType = bodyType;\n    this.filterMods();\n    this.saveStateToStorage();\n  }\n  \n  /**\n   * Handle race selection from modal\n   * @param {string} race - Selected race\n   */\n  handleRaceSelect(race) {\n    if (race) {\n      const raceData = ModService.getAvailableRaces().find(r => r.id === race);\n      this.raceDropdown.setValue(race);\n    }\n  }\n  \n  /**\n   * Handle race selection skip\n   */\n  handleRaceSkip() {\n    // Do nothing, just close the modal\n  }\n  \n  /**\n   * Filter mods based on current filters\n   */\n  filterMods() {\n    const filteredMods = ModService.filterMods(\n      this.currentFilters.search,\n      this.currentFilters.race,\n      this.currentFilters.bodyType\n    );\n    \n    this.modList.renderMods(filteredMods);\n    this.updateModCount();\n    \n    // Restore selections after filtering\n    const savedSelections = StorageService.loadSelectedModsFromStorage();\n    if (savedSelections) {\n      this.modList.applySelections(savedSelections);\n    }\n  }\n  \n  /**\n   * Update mod count display\n   */\n  updateModCount() {\n    const totalMods = ModService.getAllMods().length;\n    const filteredMods = ModService.getFilteredMods().length;\n    const selectedMods = this.modList.getSelectedCount();\n    \n    this.modCount.textContent = `Showing ${filteredMods} of ${totalMods} presets (${selectedMods} selected)`;\n  }\n  \n  /**\n   * Set up race modal\n   */\n  setupRaceModal() {\n    const races = ModService.getAvailableRaces();\n    this.raceModal.populateRaces(races);\n  }\n  \n  /**\n   * Update filter dropdowns with available options\n   */\n  updateFilterDropdowns() {\n    // Update race dropdown\n    const races = ModService.getAvailableRaces();\n    this.raceDropdown.updateOptions(races);\n    \n    // Update body type dropdown\n    const { btCounts } = ModService.getFilterCounts();\n    const bodyTypeOptions = Object.keys(BODY_TYPES).map(id => {\n      return {\n        id: id,\n        name: BODY_TYPES[id].name,\n        icon: BODY_TYPES[id].icon,\n        count: id === '' ? ModService.getAllMods().length : (btCounts[id] || 0)\n      };\n    });\n    \n    this.btDropdown.updateOptions(bodyTypeOptions);\n  }\n  \n  /**\n   * Save state to storage\n   */\n  saveStateToStorage() {\n    StorageService.saveStateToStorage(\n      this.currentFilters.search,\n      this.currentFilters.race,\n      this.currentFilters.bodyType\n    );\n  }\n  \n  /**\n   * Load state from storage\n   */\n  loadStateFromStorage() {\n    // Load filter state\n    const savedState = StorageService.loadStateFromStorage();\n    if (savedState) {\n      // Set search input\n      if (savedState.searchQuery) {\n        this.searchInput.value = savedState.searchQuery;\n        this.currentFilters.search = savedState.searchQuery;\n      }\n      \n      // Set race filter\n      if (savedState.raceFilter) {\n        this.raceDropdown.setValue(savedState.raceFilter);\n        this.currentFilters.race = savedState.raceFilter;\n      }\n      \n      // Set body type filter\n      if (savedState.btFilter) {\n        this.btDropdown.setValue(savedState.btFilter);\n        this.currentFilters.bodyType = savedState.btFilter;\n      }\n      \n      // Apply filters if any exist\n      if (savedState.searchQuery || savedState.raceFilter || savedState.btFilter) {\n        this.filterMods();\n      }\n    }\n    \n    // Load selected mods\n    const savedSelections = StorageService.loadSelectedModsFromStorage();\n    if (savedSelections) {\n      setTimeout(() => {\n        this.modList.applySelections(savedSelections);\n      }, 300);\n    }\n  }\n  \n  /**\n   * Clear storage and reset app state\n   */\n  clearStorage() {\n    StorageService.clearStorage();\n    \n    // Reset UI\n    this.searchInput.value = '';\n    this.currentFilters = {\n      search: '',\n      race: '',\n      bodyType: ''\n    };\n    \n    // Reset dropdowns\n    this.raceDropdown.setValue('');\n    this.btDropdown.setValue('');\n    \n    // Clear selections\n    this.modList.selectAll(false);\n    \n    // Apply filters\n    this.filterMods();\n    \n    showStatus('success', 'Preferences and selections cleared.', this.statusMessage);\n  }\n}\n\n// Initialize app on load\nwindow.addEventListener('DOMContentLoaded', () => {\n  const app = new App();\n  \n  // Add global event handlers\n  window.selectAll = (state) => {\n    if (app.modList) {\n      app.modList.selectAll(state);\n    }\n  };\n  \n  window.clearStorage = () => {\n    if (app) {\n      app.clearStorage();\n    }\n  };\n});\nwindow.clearStorage = () => window.app.clearStorage();"],"names":["Dropdown","constructor","id","onChange","dropdownElement","document","getElementById","selectedElement","querySelector","optionsElement","selectedTextElement","selectedIconElement","setupEventListeners","addEventListener","e","stopPropagation","toggle","options","querySelectorAll","forEach","option","selectOption","close","dropdown","classList","remove","selected","value","dataset","text","textContent","icon","src","alt","opt","setValue","getValue","updateOptions","innerHTML","createElement","className","name","count","undefined","appendChild","RaceModal","onSelect","onSkip","modalElement","gridElement","confirmButton","skipButton","selectedRace","hide","populateRaces","races","filter","race","charAt","el","add","disabled","show","style","display","getRaceName","raceMap","getBodyTypeName","bt","btMap","toUpperCase","getFileNameFromUrl","url","urlObj","URL","nameParam","searchParams","get","decodeURIComponent","split","pop","debounce","func","delay","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","showStatus","type","message","statusElement","RACE_ICONS","BODY_TYPES","STORAGE_KEYS","SELECTED_PRESETS","APP_STATE","VISITED_BEFORE","ModList","onSelectionChange","modListElement","currentSelections","renderMods","mods","saveCurrentSelections","mod","card","raceName","raceIcon","bodyTypeName","bodyType","uniqueKey","isChecked","originalLink","infoLink","downloadUrl","imagePath","displayName","checkbox","cardElement","closest","modId","modName","applySelections","selections","checked","selectAll","state","getSelectedUrls","map","getSelectedCount","Object","keys","DownloadManager","downloadProgressElement","progressBarElement","downloadedCountElement","totalCountElement","progressStatusElement","statusMessageElement","generateBtnElement","modalDownloadProgressElement","modalProgressBarElement","modalDownloadedCountElement","modalTotalCountElement","modalProgressStatusElement","modalGenerateBtnElement","isGenerating","generatePack","selectedUrls","fromModal","progressElement","width","zip","JSZip","folder","failedFiles","downloadedCount","file","response","fetch","ok","Error","blob","fileName","progressPercentage","error","console","push","Promise","resolve","content","generateAsync","compression","compressionOptions","level","onUpdate","metadata","compressionPercent","Math","round","percent","saveAs","FALLBACK_MODS","ModService","filteredMods","availableRaces","loadMods","json","fetchError","log","identifyAvailableRaces","raceCounts","raceId","capitalizeRaceName","sort","a","b","localeCompare","part","slice","join","filterMods","query","normalizedQuery","toLowerCase","matchName","includes","matchRace","matchBT","getFilterCounts","btCounts","getAvailableRaces","getAllMods","getFilteredMods","SelectionModal","modList","downloadManager","closeBtn","selectedPresetsList","modalGenerateBtn","noSelectionsMessage","target","key","contains","populateSelectedPresets","body","overflow","focus","selectedMods","selectionKeys","allMods","parts","match","selectedMod","find","warn","selectedModsArray","values","removeButton","preventDefault","removeSelectedMod","modCards","found","StorageService","saveStateToStorage","searchQuery","raceFilter","btFilter","localStorage","setItem","JSON","stringify","saveSelectedModsToStorage","selectedModIds","loadStateFromStorage","savedState","getItem","parse","loadSelectedModsFromStorage","savedSelectedMods","hasVisitedBefore","setVisitedBefore","clearStorage","removeItem","App","searchInput","modCount","selectionCounter","selectedCountElement","statusMessage","generateBtn","handleSelectionChange","bind","raceDropdown","handleRaceChange","btDropdown","handleBodyTypeChange","raceModal","handleRaceSelect","handleRaceSkip","selectionModal","currentFilters","search","initializeApp","setupRaceModal","updateFilterDropdowns","updateModCount","selectedCount","r","savedSelections","totalMods","bodyTypeOptions","window","app"],"mappings":"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"}